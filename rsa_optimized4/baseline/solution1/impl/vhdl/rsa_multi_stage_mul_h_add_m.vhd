-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rsa_multi_stage_mul_h_add_m is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    a : IN STD_LOGIC_VECTOR (0 downto 0);
    m : IN STD_LOGIC_VECTOR (255 downto 0);
    t : IN STD_LOGIC_VECTOR (255 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (255 downto 0) );
end;


architecture behav of rsa_multi_stage_mul_h_add_m is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_38_p0 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_fu_38_p2 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component rsa_add_256ns_256ns_256_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (255 downto 0);
        din1 : IN STD_LOGIC_VECTOR (255 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (255 downto 0) );
    end component;



begin
    add_256ns_256ns_256_2_1_U20 : component rsa_add_256ns_256ns_256_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 256,
        din1_WIDTH => 256,
        dout_WIDTH => 256)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_38_p0,
        din1 => m,
        ce => ap_const_logic_1,
        dout => grp_fu_38_p2);




        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= grp_fu_38_p2;
    grp_fu_38_p0 <= 
        t when (a(0) = '1') else 
        ap_const_lv256_lc_1;
end behav;
