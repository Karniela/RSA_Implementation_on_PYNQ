-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rsa_multi_stage_mul_x0_add_m is
port (
    ap_ready : OUT STD_LOGIC;
    a : IN STD_LOGIC_VECTOR (0 downto 0);
    m : IN STD_LOGIC_VECTOR (128 downto 0);
    t : IN STD_LOGIC_VECTOR (128 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (128 downto 0) );
end;


architecture behav of rsa_multi_stage_mul_x0_add_m is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv129_lc_1 : STD_LOGIC_VECTOR (128 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal d1_V_fu_30_p3 : STD_LOGIC_VECTOR (128 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= std_logic_vector(unsigned(d1_V_fu_30_p3) + unsigned(m));
    d1_V_fu_30_p3 <= 
        t when (a(0) = '1') else 
        ap_const_lv129_lc_1;
end behav;
