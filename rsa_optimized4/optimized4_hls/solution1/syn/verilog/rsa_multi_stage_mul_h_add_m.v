// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rsa_multi_stage_mul_h_add_m (
        ap_clk,
        ap_rst,
        a,
        m,
        t,
        ap_return
);


input   ap_clk;
input   ap_rst;
input  [0:0] a;
input  [255:0] m;
input  [255:0] t;
output  [255:0] ap_return;

wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire    ap_block_pp0_stage0;
wire   [255:0] grp_fu_38_p0;
wire   [255:0] grp_fu_38_p2;
wire    ap_ce_reg;

rsa_add_256ns_256ns_256_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 256 ),
    .din1_WIDTH( 256 ),
    .dout_WIDTH( 256 ))
add_256ns_256ns_256_2_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_38_p0),
    .din1(m),
    .ce(1'b1),
    .dout(grp_fu_38_p2)
);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_return = grp_fu_38_p2;

assign grp_fu_38_p0 = ((a[0:0] == 1'b1) ? t : 256'd0);

endmodule //rsa_multi_stage_mul_h_add_m
