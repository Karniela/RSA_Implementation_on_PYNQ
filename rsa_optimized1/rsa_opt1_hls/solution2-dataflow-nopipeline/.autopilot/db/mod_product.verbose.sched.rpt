

================================================================
== Vitis HLS Report for 'mod_product'
================================================================
<<<<<<< HEAD:rsa_optimized1/rsa_opt1_hls/solution2-dataflow-nopipeline/.autopilot/db/mod_product.verbose.sched.rpt
* Date:           Thu Dec  5 16:45:51 2024
=======
* Date:           Thu Dec 12 17:19:57 2024
>>>>>>> origin/branch2:rsa_optimized1/baseline/solution1/.autopilot/db/mod_product.verbose.sched.rpt

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        rsa_opt1_hls
* Solution:       solution2-dataflow-nopipeline (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.882 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      833|      833|  8.330 us|  8.330 us|  833|  833|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |               |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |- MOD_PRODUCT  |      832|      832|        13|          -|          -|    64|        no|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 14
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%lhs = alloca i32 1"   --->   Operation 15 'alloca' 'lhs' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%lhs_1 = alloca i32 1"   --->   Operation 16 'alloca' 'lhs_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 17 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%shr_i_34 = alloca i32 1"   --->   Operation 18 'alloca' 'shr_i_34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%N_read = read i256 @_ssdm_op_Read.ap_auto.i256, i256 %N"   --->   Operation 19 'read' 'N_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%b_read = read i256 @_ssdm_op_Read.ap_auto.i256, i256 %b"   --->   Operation 20 'read' 'b_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%a_read = read i256 @_ssdm_op_Read.ap_auto.i256, i256 %a"   --->   Operation 21 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln186 = zext i256 %b_read"   --->   Operation 22 'zext' 'zext_ln186' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%conv_i167 = zext i256 %N_read"   --->   Operation 23 'zext' 'conv_i167' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln1496 = zext i256 %N_read"   --->   Operation 24 'zext' 'zext_ln1496' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (1.58ns)   --->   "%store_ln13 = store i256 %a_read, i256 %shr_i_34" [rsa.cpp:13]   --->   Operation 25 'store' 'store_ln13' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%store_ln13 = store i9 0, i9 %i" [rsa.cpp:13]   --->   Operation 26 'store' 'store_ln13' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 27 [1/1] (1.58ns)   --->   "%store_ln13 = store i257 %zext_ln186, i257 %lhs_1" [rsa.cpp:13]   --->   Operation 27 'store' 'store_ln13' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 28 [1/1] (1.58ns)   --->   "%store_ln13 = store i257 0, i257 %lhs" [rsa.cpp:13]   --->   Operation 28 'store' 'store_ln13' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln13 = br void %for.body" [rsa.cpp:13]   --->   Operation 29 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.44>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%i_2 = load i9 %i" [rsa.cpp:13]   --->   Operation 30 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %i_2, i32 8" [rsa.cpp:13]   --->   Operation 31 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 64, i64 64, i64 64"   --->   Operation 32 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %tmp, void %for.body.split_ifconv, void %for.end" [rsa.cpp:13]   --->   Operation 33 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%lhs_load_1 = load i257 %lhs"   --->   Operation 34 'load' 'lhs_load_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%lhs_1_load = load i257 %lhs_1"   --->   Operation 35 'load' 'lhs_1_load' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln186_1 = zext i257 %lhs_1_load"   --->   Operation 36 'zext' 'zext_ln186_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln186_2 = zext i257 %lhs_load_1"   --->   Operation 37 'zext' 'zext_ln186_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 38 [2/2] (3.44ns)   --->   "%ret_V = add i258 %zext_ln186_2, i258 %zext_ln186_1"   --->   Operation 38 'add' 'ret_V' <Predicate = (!tmp)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [2/2] (3.44ns)   --->   "%m_V = add i257 %lhs_load_1, i257 %lhs_1_load"   --->   Operation 39 'add' 'm_V' <Predicate = (!tmp)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.82ns)   --->   "%i_3 = add i9 %i_2, i9 4" [rsa.cpp:13]   --->   Operation 40 'add' 'i_3' <Predicate = (!tmp)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (1.58ns)   --->   "%store_ln13 = store i9 %i_3, i9 %i" [rsa.cpp:13]   --->   Operation 41 'store' 'store_ln13' <Predicate = (!tmp)> <Delay = 1.58>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%lhs_load = load i257 %lhs"   --->   Operation 42 'load' 'lhs_load' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%trunc_ln186 = trunc i257 %lhs_load"   --->   Operation 43 'trunc' 'trunc_ln186' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%ret_ln33 = ret i256 %trunc_ln186" [rsa.cpp:33]   --->   Operation 44 'ret' 'ret_ln33' <Predicate = (tmp)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.88>
ST_3 : Operation 45 [1/2] (3.44ns)   --->   "%ret_V = add i258 %zext_ln186_2, i258 %zext_ln186_1"   --->   Operation 45 'add' 'ret_V' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/2] (3.44ns)   --->   "%m_V = add i257 %lhs_load_1, i257 %lhs_1_load"   --->   Operation 46 'add' 'm_V' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [2/2] (3.44ns)   --->   "%m_V_1 = sub i257 %m_V, i257 %zext_ln1496"   --->   Operation 47 'sub' 'm_V_1' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%ret_V_1 = bitconcatenate i258 @_ssdm_op_BitConcatenate.i258.i257.i1, i257 %lhs_1_load, i1 0"   --->   Operation 48 'bitconcatenate' 'ret_V_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (4.71ns)   --->   "%icmp_ln1035 = icmp_ugt  i258 %ret_V_1, i258 %conv_i167"   --->   Operation 49 'icmp' 'icmp_ln1035' <Predicate = true> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%t_V_1 = shl i257 %lhs_1_load, i257 1"   --->   Operation 50 'shl' 't_V_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [2/2] (3.44ns)   --->   "%t_V = sub i257 %t_V_1, i257 %zext_ln1496"   --->   Operation 51 'sub' 't_V' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.26>
<<<<<<< HEAD:rsa_optimized1/rsa_opt1_hls/solution2-dataflow-nopipeline/.autopilot/db/mod_product.verbose.sched.rpt
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%p_load = load i256 %empty"   --->   Operation 46 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%trunc_ln1497 = trunc i256 %p_load"   --->   Operation 47 'trunc' 'trunc_ln1497' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (4.71ns)   --->   "%icmp_ln1031 = icmp_ult  i258 %ret_V, i258 %conv_i167"   --->   Operation 48 'icmp' 'icmp_ln1031' <Predicate = true> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/2] (3.44ns)   --->   "%m_V_1 = sub i257 %m_V, i257 %zext_ln1496"   --->   Operation 49 'sub' 'm_V_1' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node m_V_3)   --->   "%and_ln1031 = and i1 %trunc_ln1497, i1 %icmp_ln1031"   --->   Operation 50 'and' 'and_ln1031' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node m_V_3)   --->   "%m_V_2 = select i1 %and_ln1031, i257 %m_V, i257 %m_V_1"   --->   Operation 51 'select' 'm_V_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (1.55ns) (out node of the LUT)   --->   "%m_V_3 = select i1 %trunc_ln1497, i257 %m_V_2, i257 %lhs_load_1"   --->   Operation 52 'select' 'm_V_3' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%r_V = partselect i255 @_ssdm_op_PartSelect.i255.i256.i32.i32, i256 %p_load, i32 1, i32 255"   --->   Operation 53 'partselect' 'r_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln1669 = zext i255 %r_V"   --->   Operation 54 'zext' 'zext_ln1669' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (1.58ns)   --->   "%store_ln13 = store i256 %zext_ln1669, i256 %empty" [rsa.cpp:13]   --->   Operation 55 'store' 'store_ln13' <Predicate = true> <Delay = 1.58>
=======
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%shr_i_34_load = load i256 %shr_i_34"   --->   Operation 52 'load' 'shr_i_34_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln1497 = trunc i256 %shr_i_34_load"   --->   Operation 53 'trunc' 'trunc_ln1497' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (4.71ns)   --->   "%icmp_ln1031 = icmp_ult  i258 %ret_V, i258 %conv_i167"   --->   Operation 54 'icmp' 'icmp_ln1031' <Predicate = true> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/2] (3.44ns)   --->   "%m_V_1 = sub i257 %m_V, i257 %zext_ln1496"   --->   Operation 55 'sub' 'm_V_1' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node m_V_16)   --->   "%and_ln1031 = and i1 %icmp_ln1031, i1 %trunc_ln1497"   --->   Operation 56 'and' 'and_ln1031' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node m_V_16)   --->   "%m_V_2 = select i1 %and_ln1031, i257 %m_V, i257 %m_V_1"   --->   Operation 57 'select' 'm_V_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (1.55ns) (out node of the LUT)   --->   "%m_V_16 = select i1 %trunc_ln1497, i257 %m_V_2, i257 %lhs_load_1" [rsa.cpp:17]   --->   Operation 58 'select' 'm_V_16' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 59 [1/2] (3.44ns)   --->   "%t_V = sub i257 %t_V_1, i257 %zext_ln1496"   --->   Operation 59 'sub' 't_V' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (1.55ns)   --->   "%t_V_12 = select i1 %icmp_ln1035, i257 %t_V, i257 %t_V_1" [rsa.cpp:25]   --->   Operation 60 'select' 't_V_12' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i256.i32, i256 %shr_i_34_load, i32 1"   --->   Operation 61 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i256.i32, i256 %shr_i_34_load, i32 2"   --->   Operation 62 'bitselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_3 = bitselect i1 @_ssdm_op_BitSelect.i1.i256.i32, i256 %shr_i_34_load, i32 3"   --->   Operation 63 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%r_V = partselect i252 @_ssdm_op_PartSelect.i252.i256.i32.i32, i256 %shr_i_34_load, i32 4, i32 255"   --->   Operation 64 'partselect' 'r_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln1669 = zext i252 %r_V"   --->   Operation 65 'zext' 'zext_ln1669' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (1.58ns)   --->   "%store_ln13 = store i256 %zext_ln1669, i256 %shr_i_34" [rsa.cpp:13]   --->   Operation 66 'store' 'store_ln13' <Predicate = true> <Delay = 1.58>
>>>>>>> origin/branch2:rsa_optimized1/baseline/solution1/.autopilot/db/mod_product.verbose.sched.rpt

State 5 <SV = 4> <Delay = 3.44>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln186_3 = zext i257 %t_V_12"   --->   Operation 67 'zext' 'zext_ln186_3' <Predicate = (tmp_1)> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln186_4 = zext i257 %m_V_16"   --->   Operation 68 'zext' 'zext_ln186_4' <Predicate = (tmp_1)> <Delay = 0.00>
ST_5 : Operation 69 [2/2] (3.44ns)   --->   "%ret_V_2 = add i258 %zext_ln186_4, i258 %zext_ln186_3"   --->   Operation 69 'add' 'ret_V_2' <Predicate = (tmp_1)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [2/2] (3.44ns)   --->   "%m_V_4 = add i257 %m_V_16, i257 %t_V_12"   --->   Operation 70 'add' 'm_V_4' <Predicate = (tmp_1)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.88>
ST_6 : Operation 71 [1/2] (3.44ns)   --->   "%ret_V_2 = add i258 %zext_ln186_4, i258 %zext_ln186_3"   --->   Operation 71 'add' 'ret_V_2' <Predicate = (tmp_1)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 72 [1/2] (3.44ns)   --->   "%m_V_4 = add i257 %m_V_16, i257 %t_V_12"   --->   Operation 72 'add' 'm_V_4' <Predicate = (tmp_1)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 73 [2/2] (3.44ns)   --->   "%m_V_5 = sub i257 %m_V_4, i257 %zext_ln1496"   --->   Operation 73 'sub' 'm_V_5' <Predicate = (tmp_1)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%ret_V_3 = bitconcatenate i258 @_ssdm_op_BitConcatenate.i258.i257.i1, i257 %t_V_12, i1 0"   --->   Operation 74 'bitconcatenate' 'ret_V_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (4.71ns)   --->   "%icmp_ln1035_1 = icmp_ugt  i258 %ret_V_3, i258 %conv_i167"   --->   Operation 75 'icmp' 'icmp_ln1035_1' <Predicate = true> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%t_V_4 = shl i257 %t_V_12, i257 1"   --->   Operation 76 'shl' 't_V_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [2/2] (3.44ns)   --->   "%t_V_3 = sub i257 %t_V_4, i257 %zext_ln1496"   --->   Operation 77 'sub' 't_V_3' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 6.26>
ST_7 : Operation 78 [1/1] (4.71ns)   --->   "%icmp_ln1031_1 = icmp_ult  i258 %ret_V_2, i258 %conv_i167"   --->   Operation 78 'icmp' 'icmp_ln1031_1' <Predicate = (tmp_1)> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 79 [1/2] (3.44ns)   --->   "%m_V_5 = sub i257 %m_V_4, i257 %zext_ln1496"   --->   Operation 79 'sub' 'm_V_5' <Predicate = (tmp_1)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node m_V_17)   --->   "%and_ln1031_1 = and i1 %icmp_ln1031_1, i1 %tmp_1"   --->   Operation 80 'and' 'and_ln1031_1' <Predicate = (tmp_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node m_V_17)   --->   "%m_V_6 = select i1 %and_ln1031_1, i257 %m_V_4, i257 %m_V_5"   --->   Operation 81 'select' 'm_V_6' <Predicate = (tmp_1)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 82 [1/1] (1.55ns) (out node of the LUT)   --->   "%m_V_17 = select i1 %tmp_1, i257 %m_V_6, i257 %m_V_16" [rsa.cpp:17]   --->   Operation 82 'select' 'm_V_17' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 83 [1/2] (3.44ns)   --->   "%t_V_3 = sub i257 %t_V_4, i257 %zext_ln1496"   --->   Operation 83 'sub' 't_V_3' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 84 [1/1] (1.55ns)   --->   "%t_V_13 = select i1 %icmp_ln1035_1, i257 %t_V_3, i257 %t_V_4" [rsa.cpp:25]   --->   Operation 84 'select' 't_V_13' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 8 <SV = 7> <Delay = 4.71>
ST_8 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln186_5 = zext i257 %t_V_13"   --->   Operation 85 'zext' 'zext_ln186_5' <Predicate = (tmp_2)> <Delay = 0.00>
ST_8 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln186_6 = zext i257 %m_V_17"   --->   Operation 86 'zext' 'zext_ln186_6' <Predicate = (tmp_2)> <Delay = 0.00>
ST_8 : Operation 87 [2/2] (3.44ns)   --->   "%ret_V_4 = add i258 %zext_ln186_6, i258 %zext_ln186_5"   --->   Operation 87 'add' 'ret_V_4' <Predicate = (tmp_2)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 88 [2/2] (3.44ns)   --->   "%m_V_8 = add i257 %m_V_17, i257 %t_V_13"   --->   Operation 88 'add' 'm_V_8' <Predicate = (tmp_2)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 89 [1/1] (0.00ns)   --->   "%ret_V_5 = bitconcatenate i258 @_ssdm_op_BitConcatenate.i258.i257.i1, i257 %t_V_13, i1 0"   --->   Operation 89 'bitconcatenate' 'ret_V_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 90 [1/1] (4.71ns)   --->   "%icmp_ln1035_2 = icmp_ugt  i258 %ret_V_5, i258 %conv_i167"   --->   Operation 90 'icmp' 'icmp_ln1035_2' <Predicate = true> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 91 [1/1] (0.00ns)   --->   "%t_V_7 = shl i257 %t_V_13, i257 1"   --->   Operation 91 'shl' 't_V_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 92 [2/2] (3.44ns)   --->   "%t_V_6 = sub i257 %t_V_7, i257 %zext_ln1496"   --->   Operation 92 'sub' 't_V_6' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 6.88>
ST_9 : Operation 93 [1/2] (3.44ns)   --->   "%ret_V_4 = add i258 %zext_ln186_6, i258 %zext_ln186_5"   --->   Operation 93 'add' 'ret_V_4' <Predicate = (tmp_2)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 94 [1/2] (3.44ns)   --->   "%m_V_8 = add i257 %m_V_17, i257 %t_V_13"   --->   Operation 94 'add' 'm_V_8' <Predicate = (tmp_2)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 95 [2/2] (3.44ns)   --->   "%m_V_9 = sub i257 %m_V_8, i257 %zext_ln1496"   --->   Operation 95 'sub' 'm_V_9' <Predicate = (tmp_2)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 96 [1/2] (3.44ns)   --->   "%t_V_6 = sub i257 %t_V_7, i257 %zext_ln1496"   --->   Operation 96 'sub' 't_V_6' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 97 [1/1] (1.55ns)   --->   "%t_V_14 = select i1 %icmp_ln1035_2, i257 %t_V_6, i257 %t_V_7" [rsa.cpp:25]   --->   Operation 97 'select' 't_V_14' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 10 <SV = 9> <Delay = 6.26>
ST_10 : Operation 98 [1/1] (4.71ns)   --->   "%icmp_ln1031_2 = icmp_ult  i258 %ret_V_4, i258 %conv_i167"   --->   Operation 98 'icmp' 'icmp_ln1031_2' <Predicate = (tmp_2)> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 99 [1/2] (3.44ns)   --->   "%m_V_9 = sub i257 %m_V_8, i257 %zext_ln1496"   --->   Operation 99 'sub' 'm_V_9' <Predicate = (tmp_2)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node m_V_18)   --->   "%and_ln1031_2 = and i1 %icmp_ln1031_2, i1 %tmp_2"   --->   Operation 100 'and' 'and_ln1031_2' <Predicate = (tmp_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node m_V_18)   --->   "%m_V_10 = select i1 %and_ln1031_2, i257 %m_V_8, i257 %m_V_9"   --->   Operation 101 'select' 'm_V_10' <Predicate = (tmp_2)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 102 [1/1] (1.55ns) (out node of the LUT)   --->   "%m_V_18 = select i1 %tmp_2, i257 %m_V_10, i257 %m_V_17" [rsa.cpp:17]   --->   Operation 102 'select' 'm_V_18' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 103 [1/1] (0.00ns)   --->   "%ret_V_7 = bitconcatenate i258 @_ssdm_op_BitConcatenate.i258.i257.i1, i257 %t_V_14, i1 0"   --->   Operation 103 'bitconcatenate' 'ret_V_7' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 104 [1/1] (4.71ns)   --->   "%icmp_ln1035_3 = icmp_ugt  i258 %ret_V_7, i258 %conv_i167"   --->   Operation 104 'icmp' 'icmp_ln1035_3' <Predicate = true> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 105 [1/1] (0.00ns)   --->   "%t_V_10 = shl i257 %t_V_14, i257 1"   --->   Operation 105 'shl' 't_V_10' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 106 [2/2] (3.44ns)   --->   "%t_V_9 = sub i257 %t_V_10, i257 %zext_ln1496"   --->   Operation 106 'sub' 't_V_9' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 6.58>
ST_11 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln186_7 = zext i257 %t_V_14"   --->   Operation 107 'zext' 'zext_ln186_7' <Predicate = (tmp_3)> <Delay = 0.00>
ST_11 : Operation 108 [1/1] (0.00ns)   --->   "%zext_ln186_8 = zext i257 %m_V_18"   --->   Operation 108 'zext' 'zext_ln186_8' <Predicate = (tmp_3)> <Delay = 0.00>
ST_11 : Operation 109 [2/2] (3.44ns)   --->   "%ret_V_6 = add i258 %zext_ln186_8, i258 %zext_ln186_7"   --->   Operation 109 'add' 'ret_V_6' <Predicate = (tmp_3)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 110 [2/2] (3.44ns)   --->   "%m_V_12 = add i257 %m_V_18, i257 %t_V_14"   --->   Operation 110 'add' 'm_V_12' <Predicate = (tmp_3)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 111 [1/2] (3.44ns)   --->   "%t_V_9 = sub i257 %t_V_10, i257 %zext_ln1496"   --->   Operation 111 'sub' 't_V_9' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 112 [1/1] (1.55ns)   --->   "%t_V_11 = select i1 %icmp_ln1035_3, i257 %t_V_9, i257 %t_V_10" [rsa.cpp:25]   --->   Operation 112 'select' 't_V_11' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 113 [1/1] (1.58ns)   --->   "%store_ln13 = store i257 %t_V_11, i257 %lhs_1" [rsa.cpp:13]   --->   Operation 113 'store' 'store_ln13' <Predicate = true> <Delay = 1.58>

State 12 <SV = 11> <Delay = 6.88>
ST_12 : Operation 114 [1/2] (3.44ns)   --->   "%ret_V_6 = add i258 %zext_ln186_8, i258 %zext_ln186_7"   --->   Operation 114 'add' 'ret_V_6' <Predicate = (tmp_3)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 115 [1/2] (3.44ns)   --->   "%m_V_12 = add i257 %m_V_18, i257 %t_V_14"   --->   Operation 115 'add' 'm_V_12' <Predicate = (tmp_3)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 116 [2/2] (3.44ns)   --->   "%m_V_13 = sub i257 %m_V_12, i257 %zext_ln1496"   --->   Operation 116 'sub' 'm_V_13' <Predicate = (tmp_3)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 6.26>
ST_13 : Operation 117 [1/1] (4.71ns)   --->   "%icmp_ln1031_3 = icmp_ult  i258 %ret_V_6, i258 %conv_i167"   --->   Operation 117 'icmp' 'icmp_ln1031_3' <Predicate = (tmp_3)> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 118 [1/2] (3.44ns)   --->   "%m_V_13 = sub i257 %m_V_12, i257 %zext_ln1496"   --->   Operation 118 'sub' 'm_V_13' <Predicate = (tmp_3)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node m_V_15)   --->   "%and_ln1031_3 = and i1 %icmp_ln1031_3, i1 %tmp_3"   --->   Operation 119 'and' 'and_ln1031_3' <Predicate = (tmp_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node m_V_15)   --->   "%m_V_14 = select i1 %and_ln1031_3, i257 %m_V_12, i257 %m_V_13"   --->   Operation 120 'select' 'm_V_14' <Predicate = (tmp_3)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 121 [1/1] (1.55ns) (out node of the LUT)   --->   "%m_V_15 = select i1 %tmp_3, i257 %m_V_14, i257 %m_V_18" [rsa.cpp:17]   --->   Operation 121 'select' 'm_V_15' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 14 <SV = 13> <Delay = 1.58>
ST_14 : Operation 122 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9"   --->   Operation 122 'specloopname' 'specloopname_ln1633' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 123 [1/1] (1.58ns)   --->   "%store_ln13 = store i257 %m_V_15, i257 %lhs" [rsa.cpp:13]   --->   Operation 123 'store' 'store_ln13' <Predicate = true> <Delay = 1.58>
ST_14 : Operation 124 [1/1] (0.00ns)   --->   "%br_ln13 = br void %for.body" [rsa.cpp:13]   --->   Operation 124 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	'alloca' operation ('shr_i_34') [7]  (0 ns)
	'store' operation ('store_ln13', rsa.cpp:13) of variable 'a_read' on local variable 'shr_i_34' [14]  (1.59 ns)

 <State 2>: 3.44ns
The critical path consists of the following:
	'load' operation ('lhs_load_1') on local variable 'lhs' [25]  (0 ns)
	'add' operation ('ret.V') [32]  (3.44 ns)

 <State 3>: 6.88ns
The critical path consists of the following:
	'add' operation ('m.V') [34]  (3.44 ns)
	'sub' operation ('m.V') [35]  (3.44 ns)

 <State 4>: 6.27ns
The critical path consists of the following:
<<<<<<< HEAD:rsa_optimized1/rsa_opt1_hls/solution2-dataflow-nopipeline/.autopilot/db/mod_product.verbose.sched.rpt
	'icmp' operation ('icmp_ln1031') [34]  (4.71 ns)
	'and' operation ('and_ln1031') [37]  (0 ns)
	'select' operation ('m.V') [38]  (0 ns)
	'select' operation ('m.V') [39]  (1.56 ns)
=======
	'icmp' operation ('icmp_ln1031') [33]  (4.71 ns)
	'and' operation ('and_ln1031') [36]  (0 ns)
	'select' operation ('m.V') [37]  (0 ns)
	'select' operation ('m.V', rsa.cpp:17) [38]  (1.56 ns)
>>>>>>> origin/branch2:rsa_optimized1/baseline/solution1/.autopilot/db/mod_product.verbose.sched.rpt

 <State 5>: 3.44ns
The critical path consists of the following:
<<<<<<< HEAD:rsa_optimized1/rsa_opt1_hls/solution2-dataflow-nopipeline/.autopilot/db/mod_product.verbose.sched.rpt
	'store' operation ('store_ln13', rsa.cpp:13) of variable 'm.V' on local variable 'lhs' [50]  (1.59 ns)
=======
	'add' operation ('ret.V') [47]  (3.44 ns)

 <State 6>: 6.88ns
The critical path consists of the following:
	'add' operation ('m.V') [49]  (3.44 ns)
	'sub' operation ('m.V') [50]  (3.44 ns)

 <State 7>: 6.27ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln1031_1') [48]  (4.71 ns)
	'and' operation ('and_ln1031_1') [51]  (0 ns)
	'select' operation ('m.V') [52]  (0 ns)
	'select' operation ('m.V', rsa.cpp:17) [53]  (1.56 ns)

 <State 8>: 4.71ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln1035_2') [70]  (4.71 ns)

 <State 9>: 6.88ns
The critical path consists of the following:
	'add' operation ('m.V') [64]  (3.44 ns)
	'sub' operation ('m.V') [65]  (3.44 ns)

 <State 10>: 6.27ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln1031_2') [63]  (4.71 ns)
	'and' operation ('and_ln1031_2') [66]  (0 ns)
	'select' operation ('m.V') [67]  (0 ns)
	'select' operation ('m.V', rsa.cpp:17) [68]  (1.56 ns)

 <State 11>: 6.58ns
The critical path consists of the following:
	'sub' operation ('t.V') [87]  (3.44 ns)
	'select' operation ('t.V', rsa.cpp:25) [88]  (1.56 ns)
	'store' operation ('store_ln13', rsa.cpp:13) of variable 't.V', rsa.cpp:25 on local variable 'lhs' [94]  (1.59 ns)

 <State 12>: 6.88ns
The critical path consists of the following:
	'add' operation ('m.V') [79]  (3.44 ns)
	'sub' operation ('m.V') [80]  (3.44 ns)

 <State 13>: 6.27ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln1031_3') [78]  (4.71 ns)
	'and' operation ('and_ln1031_3') [81]  (0 ns)
	'select' operation ('m.V') [82]  (0 ns)
	'select' operation ('m.V', rsa.cpp:17) [83]  (1.56 ns)

 <State 14>: 1.59ns
The critical path consists of the following:
	'store' operation ('store_ln13', rsa.cpp:13) of variable 'm.V', rsa.cpp:17 on local variable 'lhs' [95]  (1.59 ns)
>>>>>>> origin/branch2:rsa_optimized1/baseline/solution1/.autopilot/db/mod_product.verbose.sched.rpt


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
