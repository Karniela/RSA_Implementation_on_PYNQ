

================================================================
== Vitis HLS Report for 'mod_exp'
================================================================
* Date:           Thu Dec  5 16:45:51 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        rsa_opt1_hls
* Solution:       solution2-dataflow-nopipeline (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.882 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   263425|   526081|  2.634 ms|  5.261 ms|  263425|  526081|       no|
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------+---------+---------+-------------+-----------+-----------+------+----------+
        |           |  Latency (cycles) |  Iteration  |  Initiation Interval  | Trip |          |
        | Loop Name |   min   |   max   |   Latency   |  achieved |   target  | Count| Pipelined|
        +-----------+---------+---------+-------------+-----------+-----------+------+----------+
        |- MOD_EXP  |   263424|   526080|  1029 ~ 2055|          -|          -|   256|        no|
        +-----------+---------+---------+-------------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%t = alloca i32 1"   --->   Operation 5 'alloca' 't' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 6 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%shr_i4 = alloca i32 1"   --->   Operation 7 'alloca' 'shr_i4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%m_V = alloca i32 1"   --->   Operation 8 'alloca' 'm_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%N_read = read i256 @_ssdm_op_Read.ap_auto.i256, i256 %N" [rsa.cpp:42]   --->   Operation 9 'read' 'N_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%d_read = read i256 @_ssdm_op_Read.ap_auto.i256, i256 %d" [rsa.cpp:42]   --->   Operation 10 'read' 'd_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%y_read = read i256 @_ssdm_op_Read.ap_auto.i256, i256 %y" [rsa.cpp:42]   --->   Operation 11 'read' 'y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.58ns)   --->   "%store_ln42 = store i256 1, i256 %m_V" [rsa.cpp:42]   --->   Operation 12 'store' 'store_ln42' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 13 [1/1] (1.58ns)   --->   "%store_ln42 = store i256 %d_read, i256 %shr_i4" [rsa.cpp:42]   --->   Operation 13 'store' 'store_ln42' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 14 [1/1] (1.58ns)   --->   "%store_ln42 = store i9 0, i9 %i" [rsa.cpp:42]   --->   Operation 14 'store' 'store_ln42' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 15 [1/1] (1.58ns)   --->   "%store_ln42 = store i256 %y_read, i256 %t" [rsa.cpp:42]   --->   Operation 15 'store' 'store_ln42' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln42 = br void %for.body" [rsa.cpp:42]   --->   Operation 16 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.24>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%i_3 = load i9 %i" [rsa.cpp:42]   --->   Operation 17 'load' 'i_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.66ns)   --->   "%icmp_ln42 = icmp_eq  i9 %i_3, i9 256" [rsa.cpp:42]   --->   Operation 18 'icmp' 'icmp_ln42' <Predicate = true> <Delay = 1.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 256, i64 256, i64 256"   --->   Operation 19 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.82ns)   --->   "%i_4 = add i9 %i_3, i9 1" [rsa.cpp:42]   --->   Operation 20 'add' 'i_4' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln42 = br i1 %icmp_ln42, void %for.body.split, void %for.end" [rsa.cpp:42]   --->   Operation 21 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%shr_i4_load = load i256 %shr_i4"   --->   Operation 22 'load' 'shr_i4_load' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7"   --->   Operation 23 'specloopname' 'specloopname_ln1633' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%trunc_ln1497 = trunc i256 %shr_i4_load"   --->   Operation 24 'trunc' 'trunc_ln1497' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln46 = br i1 %trunc_ln1497, void %for.inc, void %if.then" [rsa.cpp:46]   --->   Operation 25 'br' 'br_ln46' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%t_load_1 = load i256 %t" [rsa.cpp:47]   --->   Operation 26 'load' 't_load_1' <Predicate = (!icmp_ln42 & trunc_ln1497)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%m_V_load_1 = load i256 %m_V" [rsa.cpp:47]   --->   Operation 27 'load' 'm_V_load_1' <Predicate = (!icmp_ln42 & trunc_ln1497)> <Delay = 0.00>
ST_2 : Operation 28 [2/2] (1.58ns)   --->   "%m_V_4 = call i256 @mod_product, i256 %m_V_load_1, i256 %t_load_1, i256 %N_read" [rsa.cpp:47]   --->   Operation 28 'call' 'm_V_4' <Predicate = (!icmp_ln42 & trunc_ln1497)> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%m_V_load = load i256 %m_V" [rsa.cpp:53]   --->   Operation 29 'load' 'm_V_load' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%ret_ln53 = ret i256 %m_V_load" [rsa.cpp:53]   --->   Operation 30 'ret' 'ret_ln53' <Predicate = (icmp_ln42)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.58>
ST_3 : Operation 31 [1/2] (0.00ns)   --->   "%m_V_4 = call i256 @mod_product, i256 %m_V_load_1, i256 %t_load_1, i256 %N_read" [rsa.cpp:47]   --->   Operation 31 'call' 'm_V_4' <Predicate = (trunc_ln1497)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 32 [1/1] (1.58ns)   --->   "%store_ln48 = store i256 %m_V_4, i256 %m_V" [rsa.cpp:48]   --->   Operation 32 'store' 'store_ln48' <Predicate = (trunc_ln1497)> <Delay = 1.58>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln48 = br void %for.inc" [rsa.cpp:48]   --->   Operation 33 'br' 'br_ln48' <Predicate = (trunc_ln1497)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%t_load = load i256 %t" [rsa.cpp:49]   --->   Operation 34 'load' 't_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [2/2] (1.58ns)   --->   "%ref_tmp3 = call i256 @mod_product, i256 %t_load, i256 %t_load, i256 %N_read" [rsa.cpp:49]   --->   Operation 35 'call' 'ref_tmp3' <Predicate = true> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 36 [1/1] (1.58ns)   --->   "%store_ln42 = store i9 %i_4, i9 %i" [rsa.cpp:42]   --->   Operation 36 'store' 'store_ln42' <Predicate = true> <Delay = 1.58>

State 4 <SV = 3> <Delay = 1.58>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%shr_i4_load_1 = load i256 %shr_i4"   --->   Operation 37 'load' 'shr_i4_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [1/2] (0.00ns)   --->   "%ref_tmp3 = call i256 @mod_product, i256 %t_load, i256 %t_load, i256 %N_read" [rsa.cpp:49]   --->   Operation 38 'call' 'ref_tmp3' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%r_V = partselect i255 @_ssdm_op_PartSelect.i255.i256.i32.i32, i256 %shr_i4_load_1, i32 1, i32 255"   --->   Operation 39 'partselect' 'r_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln1669 = zext i255 %r_V"   --->   Operation 40 'zext' 'zext_ln1669' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (1.58ns)   --->   "%store_ln42 = store i256 %zext_ln1669, i256 %shr_i4" [rsa.cpp:42]   --->   Operation 41 'store' 'store_ln42' <Predicate = true> <Delay = 1.58>
ST_4 : Operation 42 [1/1] (1.58ns)   --->   "%store_ln42 = store i256 %ref_tmp3, i256 %t" [rsa.cpp:42]   --->   Operation 42 'store' 'store_ln42' <Predicate = true> <Delay = 1.58>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln42 = br void %for.body" [rsa.cpp:42]   --->   Operation 43 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	'alloca' operation ('result.V') [7]  (0 ns)
	'store' operation ('store_ln42', rsa.cpp:42) of constant 1 on local variable 'result.V' [11]  (1.59 ns)

 <State 2>: 3.25ns
The critical path consists of the following:
	'load' operation ('i', rsa.cpp:42) on local variable 'i' [17]  (0 ns)
	'add' operation ('i', rsa.cpp:42) [20]  (1.82 ns)
	blocking operation 1.43 ns on control path)

 <State 3>: 1.59ns
The critical path consists of the following:
	'load' operation ('t_load', rsa.cpp:49) on local variable 't' [34]  (0 ns)
	'call' operation ('ref_tmp3', rsa.cpp:49) to 'mod_product' [36]  (1.59 ns)

 <State 4>: 1.59ns
The critical path consists of the following:
	'load' operation ('shr_i4_load_1') on local variable 'shr_i4' [35]  (0 ns)
	'store' operation ('store_ln42', rsa.cpp:42) of variable 'zext_ln1669' on local variable 'shr_i4' [39]  (1.59 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
