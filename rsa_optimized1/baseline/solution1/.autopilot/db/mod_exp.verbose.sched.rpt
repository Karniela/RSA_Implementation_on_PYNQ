

================================================================
== Vitis HLS Report for 'mod_exp'
================================================================
* Date:           Mon Dec  2 13:39:02 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        baseline
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.487 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max   | min | max |   Type  |
    +---------+---------+-----------+----------+-----+-----+---------+
    |        6|      598|  60.000 ns|  5.980 us|    6|  598|       no|
    +---------+---------+-----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- VITIS_LOOP_42_1   |        5|      596|    5 ~ 37|          -|          -|  1 ~ 16|        no|
        | + VITIS_LOOP_13_1  |        1|       16|         1|          -|          -|  1 ~ 16|        no|
        | + VITIS_LOOP_13_1  |        1|       16|         1|          -|          -|  1 ~ 16|        no|
        +--------------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 6 4 3 
3 --> 4 3 
4 --> 5 
5 --> 6 5 
6 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 7 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%conv3_i3 = alloca i32 1"   --->   Operation 8 'alloca' 'conv3_i3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%t_V_1 = alloca i32 1"   --->   Operation 9 'alloca' 't_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%a_V = alloca i32 1"   --->   Operation 10 'alloca' 'a_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%N_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %N" [rsa.cpp:8]   --->   Operation 11 'read' 'N_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%d_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %d" [rsa.cpp:8]   --->   Operation 12 'read' 'd_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%y_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %y" [rsa.cpp:8]   --->   Operation 13 'read' 'y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i16 %N_read" [rsa.cpp:42]   --->   Operation 14 'zext' 'zext_ln42' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.58ns)   --->   "%store_ln42 = store i16 1, i16 %a_V" [rsa.cpp:42]   --->   Operation 15 'store' 'store_ln42' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 16 [1/1] (1.58ns)   --->   "%store_ln42 = store i16 %y_read, i16 %t_V_1" [rsa.cpp:42]   --->   Operation 16 'store' 'store_ln42' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln42 = store i16 %d_read, i16 %conv3_i3" [rsa.cpp:42]   --->   Operation 17 'store' 'store_ln42' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 18 [1/1] (1.58ns)   --->   "%store_ln42 = store i5 0, i5 %i" [rsa.cpp:42]   --->   Operation 18 'store' 'store_ln42' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln42 = br void %for.body" [rsa.cpp:42]   --->   Operation 19 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.95>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%i_5 = load i5 %i" [rsa.cpp:42]   --->   Operation 20 'load' 'i_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%t_V_11 = load i16 %t_V_1"   --->   Operation 21 'load' 't_V_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%a_V_1 = load i16 %a_V"   --->   Operation 22 'load' 'a_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (1.36ns)   --->   "%icmp_ln42 = icmp_eq  i5 %i_5, i5 16" [rsa.cpp:42]   --->   Operation 23 'icmp' 'icmp_ln42' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1, i64 16, i64 8"   --->   Operation 24 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.78ns)   --->   "%i_8 = add i5 %i_5, i5 1" [rsa.cpp:42]   --->   Operation 25 'add' 'i_8' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (1.58ns)   --->   "%br_ln42 = br i1 %icmp_ln42, void %for.body.split, void %for.end" [rsa.cpp:42]   --->   Operation 26 'br' 'br_ln42' <Predicate = true> <Delay = 1.58>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%conv3_i3_load = load i16 %conv3_i3" [rsa.cpp:11]   --->   Operation 27 'load' 'conv3_i3_load' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8"   --->   Operation 28 'specloopname' 'specloopname_ln1633' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%trunc_ln11 = trunc i16 %conv3_i3_load" [rsa.cpp:11]   --->   Operation 29 'trunc' 'trunc_ln11' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln43 = br i1 %trunc_ln11, void %if.end, void %for.body.i.preheader" [rsa.cpp:43]   --->   Operation 30 'br' 'br_ln43' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (1.58ns)   --->   "%br_ln13 = br void %for.body.i" [rsa.cpp:13]   --->   Operation 31 'br' 'br_ln13' <Predicate = (!icmp_ln42 & trunc_ln11)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 5.48>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%empty_15 = phi i16 %select_ln13, void %for.inc.i, i16 0, void %for.body.i.preheader" [rsa.cpp:13]   --->   Operation 32 'phi' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%empty_16 = phi i16 %zext_ln1669, void %for.inc.i, i16 %a_V_1, void %for.body.i.preheader"   --->   Operation 33 'phi' 'empty_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%i_1 = phi i5 %i_6, void %for.inc.i, i5 0, void %for.body.i.preheader"   --->   Operation 34 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%t_V = phi i16 %t_V_10, void %for.inc.i, i16 %t_V_11, void %for.body.i.preheader"   --->   Operation 35 'phi' 't_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (1.36ns)   --->   "%icmp_ln13 = icmp_eq  i5 %i_1, i5 16" [rsa.cpp:13]   --->   Operation 36 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%empty_17 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1, i64 16, i64 8"   --->   Operation 37 'speclooptripcount' 'empty_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (1.78ns)   --->   "%i_6 = add i5 %i_1, i5 1" [rsa.cpp:13]   --->   Operation 38 'add' 'i_6' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (1.58ns)   --->   "%br_ln13 = br i1 %icmp_ln13, void %for.body.i.split_ifconv, void %if.end.loopexit" [rsa.cpp:13]   --->   Operation 39 'br' 'br_ln13' <Predicate = true> <Delay = 1.58>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7"   --->   Operation 40 'specloopname' 'specloopname_ln1633' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln1495 = zext i16 %empty_15"   --->   Operation 41 'zext' 'zext_ln1495' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln1495_1 = zext i16 %t_V"   --->   Operation 42 'zext' 'zext_ln1495_1' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (2.07ns)   --->   "%ret_V = add i17 %zext_ln1495_1, i17 %zext_ln1495"   --->   Operation 43 'add' 'ret_V' <Predicate = (!icmp_ln13)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (2.43ns)   --->   "%icmp_ln1031 = icmp_ult  i17 %ret_V, i17 %zext_ln42"   --->   Operation 44 'icmp' 'icmp_ln1031' <Predicate = (!icmp_ln13)> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (2.07ns)   --->   "%add_ln186 = add i16 %t_V, i16 %empty_15"   --->   Operation 45 'add' 'add_ln186' <Predicate = (!icmp_ln13)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (2.07ns)   --->   "%sub_ln186 = sub i16 %add_ln186, i16 %N_read"   --->   Operation 46 'sub' 'sub_ln186' <Predicate = (!icmp_ln13)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%trunc_ln13 = trunc i16 %empty_16" [rsa.cpp:13]   --->   Operation 47 'trunc' 'trunc_ln13' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node select_ln13)   --->   "%and_ln1031 = and i1 %trunc_ln13, i1 %icmp_ln1031"   --->   Operation 48 'and' 'and_ln1031' <Predicate = (!icmp_ln13)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node select_ln13)   --->   "%select_ln1031 = select i1 %and_ln1031, i16 %add_ln186, i16 %sub_ln186"   --->   Operation 49 'select' 'select_ln1031' <Predicate = (!icmp_ln13)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln13 = select i1 %trunc_ln13, i16 %select_ln1031, i16 %empty_15" [rsa.cpp:13]   --->   Operation 50 'select' 'select_ln13' <Predicate = (!icmp_ln13)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%ret_V_1 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i16.i1, i16 %t_V, i1 0"   --->   Operation 51 'bitconcatenate' 'ret_V_1' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (2.43ns)   --->   "%icmp_ln1035 = icmp_ugt  i17 %ret_V_1, i17 %zext_ln42"   --->   Operation 52 'icmp' 'icmp_ln1035' <Predicate = (!icmp_ln13)> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%t_V_6 = shl i16 %t_V, i16 1"   --->   Operation 53 'shl' 't_V_6' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (2.07ns)   --->   "%t_V_7 = sub i16 %t_V_6, i16 %N_read"   --->   Operation 54 'sub' 't_V_7' <Predicate = (!icmp_ln13)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.80ns)   --->   "%t_V_10 = select i1 %icmp_ln1035, i16 %t_V_7, i16 %t_V_6" [rsa.cpp:25]   --->   Operation 55 'select' 't_V_10' <Predicate = (!icmp_ln13)> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%r_V = partselect i15 @_ssdm_op_PartSelect.i15.i16.i32.i32, i16 %empty_16, i32 1, i32 15"   --->   Operation 56 'partselect' 'r_V' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln1669 = zext i15 %r_V"   --->   Operation 57 'zext' 'zext_ln1669' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (2.31ns)   --->   "%icmp_ln1019 = icmp_eq  i15 %r_V, i15 0"   --->   Operation 58 'icmp' 'icmp_ln1019' <Predicate = (!icmp_ln13)> <Delay = 2.31> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (1.58ns)   --->   "%br_ln32 = br i1 %icmp_ln1019, void %for.inc.i, void %if.end.loopexit" [rsa.cpp:32]   --->   Operation 59 'br' 'br_ln32' <Predicate = (!icmp_ln13)> <Delay = 1.58>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%br_ln13 = br void %for.body.i" [rsa.cpp:13]   --->   Operation 60 'br' 'br_ln13' <Predicate = (!icmp_ln13 & !icmp_ln1019)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.58>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%p_0_0_0274_ph = phi i16 %empty_15, void %for.body.i, i16 %select_ln13, void %for.body.i.split_ifconv" [rsa.cpp:13]   --->   Operation 61 'phi' 'p_0_0_0274_ph' <Predicate = (trunc_ln11)> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (1.58ns)   --->   "%store_ln13 = store i16 %p_0_0_0274_ph, i16 %a_V" [rsa.cpp:13]   --->   Operation 62 'store' 'store_ln13' <Predicate = (trunc_ln11)> <Delay = 1.58>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end"   --->   Operation 63 'br' 'br_ln0' <Predicate = (trunc_ln11)> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%a_V_load = load i16 %a_V"   --->   Operation 64 'load' 'a_V_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (1.58ns)   --->   "%br_ln13 = br void %for.body.i22" [rsa.cpp:13]   --->   Operation 65 'br' 'br_ln13' <Predicate = true> <Delay = 1.58>

State 5 <SV = 4> <Delay = 5.48>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%empty_18 = phi i16 0, void %if.end, i16 %m_V, void %for.inc.i63"   --->   Operation 66 'phi' 'empty_18' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%empty_19 = phi i16 %t_V_11, void %if.end, i16 %zext_ln1669_1, void %for.inc.i63"   --->   Operation 67 'phi' 'empty_19' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%i_3 = phi i5 0, void %if.end, i5 %i_7, void %for.inc.i63"   --->   Operation 68 'phi' 'i_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%t_V_5 = phi i16 %t_V_11, void %if.end, i16 %t_V_14, void %for.inc.i63"   --->   Operation 69 'phi' 't_V_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (1.36ns)   --->   "%icmp_ln13_1 = icmp_eq  i5 %i_3, i5 16" [rsa.cpp:13]   --->   Operation 70 'icmp' 'icmp_ln13_1' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%empty_20 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1, i64 16, i64 8"   --->   Operation 71 'speclooptripcount' 'empty_20' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (1.78ns)   --->   "%i_7 = add i5 %i_3, i5 1" [rsa.cpp:13]   --->   Operation 72 'add' 'i_7' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 73 [1/1] (1.58ns)   --->   "%br_ln13 = br i1 %icmp_ln13_1, void %for.body.i22.split_ifconv, void %_Z11mod_product7ap_uintILi16EES0_S0_.exit64" [rsa.cpp:13]   --->   Operation 73 'br' 'br_ln13' <Predicate = true> <Delay = 1.58>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7"   --->   Operation 74 'specloopname' 'specloopname_ln1633' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln1495_2 = zext i16 %empty_18"   --->   Operation 75 'zext' 'zext_ln1495_2' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_5 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln1495_3 = zext i16 %t_V_5"   --->   Operation 76 'zext' 'zext_ln1495_3' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_5 : Operation 77 [1/1] (2.07ns)   --->   "%ret_V_2 = add i17 %zext_ln1495_3, i17 %zext_ln1495_2"   --->   Operation 77 'add' 'ret_V_2' <Predicate = (!icmp_ln13_1)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 78 [1/1] (2.43ns)   --->   "%icmp_ln1031_1 = icmp_ult  i17 %ret_V_2, i17 %zext_ln42"   --->   Operation 78 'icmp' 'icmp_ln1031_1' <Predicate = (!icmp_ln13_1)> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 79 [1/1] (2.07ns)   --->   "%add_ln186_1 = add i16 %t_V_5, i16 %empty_18"   --->   Operation 79 'add' 'add_ln186_1' <Predicate = (!icmp_ln13_1)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 80 [1/1] (2.07ns)   --->   "%sub_ln186_2 = sub i16 %add_ln186_1, i16 %N_read"   --->   Operation 80 'sub' 'sub_ln186_2' <Predicate = (!icmp_ln13_1)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "%trunc_ln13_1 = trunc i16 %empty_19" [rsa.cpp:13]   --->   Operation 81 'trunc' 'trunc_ln13_1' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_5 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node m_V)   --->   "%and_ln1031_1 = and i1 %trunc_ln13_1, i1 %icmp_ln1031_1"   --->   Operation 82 'and' 'and_ln1031_1' <Predicate = (!icmp_ln13_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node m_V)   --->   "%select_ln1031_1 = select i1 %and_ln1031_1, i16 %add_ln186_1, i16 %sub_ln186_2"   --->   Operation 83 'select' 'select_ln1031_1' <Predicate = (!icmp_ln13_1)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 84 [1/1] (0.97ns) (out node of the LUT)   --->   "%m_V = select i1 %trunc_ln13_1, i16 %select_ln1031_1, i16 %empty_18" [rsa.cpp:13]   --->   Operation 84 'select' 'm_V' <Predicate = (!icmp_ln13_1)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%ret_V_3 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i16.i1, i16 %t_V_5, i1 0"   --->   Operation 85 'bitconcatenate' 'ret_V_3' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_5 : Operation 86 [1/1] (2.43ns)   --->   "%icmp_ln1035_1 = icmp_ugt  i17 %ret_V_3, i17 %zext_ln42"   --->   Operation 86 'icmp' 'icmp_ln1035_1' <Predicate = (!icmp_ln13_1)> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "%t_V_12 = shl i16 %t_V_5, i16 1"   --->   Operation 87 'shl' 't_V_12' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (2.07ns)   --->   "%t_V_13 = sub i16 %t_V_12, i16 %N_read"   --->   Operation 88 'sub' 't_V_13' <Predicate = (!icmp_ln13_1)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 89 [1/1] (0.80ns)   --->   "%t_V_14 = select i1 %icmp_ln1035_1, i16 %t_V_13, i16 %t_V_12" [rsa.cpp:25]   --->   Operation 89 'select' 't_V_14' <Predicate = (!icmp_ln13_1)> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%r_V_1 = partselect i15 @_ssdm_op_PartSelect.i15.i16.i32.i32, i16 %empty_19, i32 1, i32 15"   --->   Operation 90 'partselect' 'r_V_1' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln1669_1 = zext i15 %r_V_1"   --->   Operation 91 'zext' 'zext_ln1669_1' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_5 : Operation 92 [1/1] (2.31ns)   --->   "%icmp_ln1019_1 = icmp_eq  i15 %r_V_1, i15 0"   --->   Operation 92 'icmp' 'icmp_ln1019_1' <Predicate = (!icmp_ln13_1)> <Delay = 2.31> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 93 [1/1] (1.58ns)   --->   "%br_ln32 = br i1 %icmp_ln1019_1, void %for.inc.i63, void %_Z11mod_product7ap_uintILi16EES0_S0_.exit64" [rsa.cpp:32]   --->   Operation 93 'br' 'br_ln32' <Predicate = (!icmp_ln13_1)> <Delay = 1.58>
ST_5 : Operation 94 [1/1] (0.00ns)   --->   "%br_ln13 = br void %for.body.i22" [rsa.cpp:13]   --->   Operation 94 'br' 'br_ln13' <Predicate = (!icmp_ln13_1 & !icmp_ln1019_1)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 3.90>
ST_6 : Operation 95 [1/1] (0.00ns)   --->   "%p_lcssa1 = phi i16 %empty_18, void %for.body.i22, i16 %m_V, void %for.body.i22.split_ifconv"   --->   Operation 95 'phi' 'p_lcssa1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_6 : Operation 96 [1/1] (0.00ns)   --->   "%conv3_i3_load_1 = load i16 %conv3_i3"   --->   Operation 96 'load' 'conv3_i3_load_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_6 : Operation 97 [1/1] (0.00ns)   --->   "%r_V_2 = partselect i15 @_ssdm_op_PartSelect.i15.i16.i32.i32, i16 %conv3_i3_load_1, i32 1, i32 15"   --->   Operation 97 'partselect' 'r_V_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln1669_2 = zext i15 %r_V_2"   --->   Operation 98 'zext' 'zext_ln1669_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_6 : Operation 99 [1/1] (2.31ns)   --->   "%icmp_ln1019_2 = icmp_eq  i15 %r_V_2, i15 0"   --->   Operation 99 'icmp' 'icmp_ln1019_2' <Predicate = (!icmp_ln42)> <Delay = 2.31> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 100 [1/1] (1.58ns)   --->   "%br_ln49 = br i1 %icmp_ln1019_2, void %for.inc, void %for.end" [rsa.cpp:49]   --->   Operation 100 'br' 'br_ln49' <Predicate = (!icmp_ln42)> <Delay = 1.58>
ST_6 : Operation 101 [1/1] (1.58ns)   --->   "%store_ln42 = store i16 %p_lcssa1, i16 %t_V_1" [rsa.cpp:42]   --->   Operation 101 'store' 'store_ln42' <Predicate = (!icmp_ln42 & !icmp_ln1019_2)> <Delay = 1.58>
ST_6 : Operation 102 [1/1] (1.58ns)   --->   "%store_ln42 = store i16 %zext_ln1669_2, i16 %conv3_i3" [rsa.cpp:42]   --->   Operation 102 'store' 'store_ln42' <Predicate = (!icmp_ln42 & !icmp_ln1019_2)> <Delay = 1.58>
ST_6 : Operation 103 [1/1] (1.58ns)   --->   "%store_ln42 = store i5 %i_8, i5 %i" [rsa.cpp:42]   --->   Operation 103 'store' 'store_ln42' <Predicate = (!icmp_ln42 & !icmp_ln1019_2)> <Delay = 1.58>
ST_6 : Operation 104 [1/1] (0.00ns)   --->   "%br_ln42 = br void %for.body" [rsa.cpp:42]   --->   Operation 104 'br' 'br_ln42' <Predicate = (!icmp_ln42 & !icmp_ln1019_2)> <Delay = 0.00>
ST_6 : Operation 105 [1/1] (0.00ns)   --->   "%m_V_1 = phi i16 %a_V_1, void %for.body, i16 %a_V_load, void %_Z11mod_product7ap_uintILi16EES0_S0_.exit64"   --->   Operation 105 'phi' 'm_V_1' <Predicate = (icmp_ln1019_2) | (icmp_ln42)> <Delay = 0.00>
ST_6 : Operation 106 [1/1] (0.00ns)   --->   "%ret_ln54 = ret i16 %m_V_1" [rsa.cpp:54]   --->   Operation 106 'ret' 'ret_ln54' <Predicate = (icmp_ln1019_2) | (icmp_ln42)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	'alloca' operation ('a.V') [7]  (0 ns)
	'store' operation ('store_ln42', rsa.cpp:42) of constant 1 on local variable 'a.V' [12]  (1.59 ns)

 <State 2>: 2.95ns
The critical path consists of the following:
	'load' operation ('i', rsa.cpp:42) on local variable 'i' [18]  (0 ns)
	'icmp' operation ('icmp_ln42', rsa.cpp:42) [21]  (1.36 ns)
	multiplexor before 'phi' operation ('a.V') with incoming values : ('a.V') ('a_V_load') [116]  (1.59 ns)

 <State 3>: 5.49ns
The critical path consists of the following:
	'phi' operation ('empty_15', rsa.cpp:13) with incoming values : ('select_ln13', rsa.cpp:13) [33]  (0 ns)
	'add' operation ('ret.V') [45]  (2.08 ns)
	'icmp' operation ('icmp_ln1031') [46]  (2.43 ns)
	'and' operation ('and_ln1031') [50]  (0 ns)
	'select' operation ('select_ln1031') [51]  (0 ns)
	'select' operation ('select_ln13', rsa.cpp:13) [52]  (0.978 ns)

 <State 4>: 1.59ns
The critical path consists of the following:
	'phi' operation ('p_0_0_0274_ph', rsa.cpp:13) with incoming values : ('select_ln13', rsa.cpp:13) [65]  (0 ns)
	'store' operation ('store_ln13', rsa.cpp:13) of variable 'p_0_0_0274_ph', rsa.cpp:13 on local variable 'a.V' [66]  (1.59 ns)

 <State 5>: 5.49ns
The critical path consists of the following:
	'phi' operation ('m.V') with incoming values : ('m.V', rsa.cpp:13) [72]  (0 ns)
	'add' operation ('ret.V') [84]  (2.08 ns)
	'icmp' operation ('icmp_ln1031_1') [85]  (2.43 ns)
	'and' operation ('and_ln1031_1') [89]  (0 ns)
	'select' operation ('select_ln1031_1') [90]  (0 ns)
	'select' operation ('m.V', rsa.cpp:13) [91]  (0.978 ns)

 <State 6>: 3.91ns
The critical path consists of the following:
	'load' operation ('conv3_i3_load_1') on local variable 'conv3_i3' [105]  (0 ns)
	'icmp' operation ('icmp_ln1019_2') [108]  (2.32 ns)
	multiplexor before 'phi' operation ('a.V') with incoming values : ('a.V') ('a_V_load') [116]  (1.59 ns)
	'phi' operation ('a.V') with incoming values : ('a.V') ('a_V_load') [116]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
