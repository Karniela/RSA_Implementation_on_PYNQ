

================================================================
== Vitis HLS Report for 'mod_exp'
================================================================
* Date:           Mon Dec  2 17:59:59 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        baseline
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.882 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   197377|   393985|  1.974 ms|  3.940 ms|  197377|  393985|       no|
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+------------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) |  Iteration |  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |   Latency  |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+------------+-----------+-----------+------+----------+
        |- VITIS_LOOP_41_1   |   197376|   393984|  771 ~ 1539|          -|          -|   256|        no|
        | + VITIS_LOOP_13_1  |      768|      768|           3|          -|          -|   256|        no|
        | + VITIS_LOOP_13_1  |      768|      768|           3|          -|          -|   256|        no|
        +--------------------+---------+---------+------------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 6 
4 --> 5 
5 --> 3 
6 --> 7 2 
7 --> 8 
8 --> 6 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 9 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%shr_i3 = alloca i32 1"   --->   Operation 10 'alloca' 'shr_i3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%m_V_1 = alloca i32 1"   --->   Operation 11 'alloca' 'm_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%t_V_1 = alloca i32 1"   --->   Operation 12 'alloca' 't_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%N_read = read i256 @_ssdm_op_Read.ap_auto.i256, i256 %N" [rsa.cpp:8]   --->   Operation 13 'read' 'N_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%d_read = read i256 @_ssdm_op_Read.ap_auto.i256, i256 %d" [rsa.cpp:8]   --->   Operation 14 'read' 'd_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%y_read = read i256 @_ssdm_op_Read.ap_auto.i256, i256 %y" [rsa.cpp:8]   --->   Operation 15 'read' 'y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%conv_i167_i15 = zext i256 %N_read" [rsa.cpp:8]   --->   Operation 16 'zext' 'conv_i167_i15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln1496 = zext i256 %N_read"   --->   Operation 17 'zext' 'zext_ln1496' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.58ns)   --->   "%store_ln41 = store i256 %y_read, i256 %t_V_1" [rsa.cpp:41]   --->   Operation 18 'store' 'store_ln41' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 19 [1/1] (1.58ns)   --->   "%store_ln41 = store i256 1, i256 %m_V_1" [rsa.cpp:41]   --->   Operation 19 'store' 'store_ln41' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 20 [1/1] (1.58ns)   --->   "%store_ln41 = store i256 %d_read, i256 %shr_i3" [rsa.cpp:41]   --->   Operation 20 'store' 'store_ln41' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 21 [1/1] (1.58ns)   --->   "%store_ln41 = store i9 0, i9 %i" [rsa.cpp:41]   --->   Operation 21 'store' 'store_ln41' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln41 = br void %for.body" [rsa.cpp:41]   --->   Operation 22 'br' 'br_ln41' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.82>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%i_4 = load i9 %i" [rsa.cpp:41]   --->   Operation 23 'load' 'i_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%a_V = load i256 %m_V_1"   --->   Operation 24 'load' 'a_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%b_V = load i256 %t_V_1"   --->   Operation 25 'load' 'b_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.66ns)   --->   "%icmp_ln41 = icmp_eq  i9 %i_4, i9 256" [rsa.cpp:41]   --->   Operation 26 'icmp' 'icmp_ln41' <Predicate = true> <Delay = 1.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 256, i64 256, i64 256"   --->   Operation 27 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (1.82ns)   --->   "%i_7 = add i9 %i_4, i9 1" [rsa.cpp:41]   --->   Operation 28 'add' 'i_7' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln41 = br i1 %icmp_ln41, void %for.body.split, void %for.end" [rsa.cpp:41]   --->   Operation 29 'br' 'br_ln41' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%shr_i3_load = load i256 %shr_i3"   --->   Operation 30 'load' 'shr_i3_load' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8"   --->   Operation 31 'specloopname' 'specloopname_ln1633' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln1497 = trunc i256 %shr_i3_load"   --->   Operation 32 'trunc' 'trunc_ln1497' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln186 = zext i256 %b_V"   --->   Operation 33 'zext' 'zext_ln186' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln43 = br i1 %trunc_ln1497, void %for.inc, void %for.body.i.preheader" [rsa.cpp:43]   --->   Operation 34 'br' 'br_ln43' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.58ns)   --->   "%br_ln13 = br void %for.body.i" [rsa.cpp:13]   --->   Operation 35 'br' 'br_ln13' <Predicate = (!icmp_ln41 & trunc_ln1497)> <Delay = 1.58>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%ret_ln51 = ret i256 %a_V" [rsa.cpp:51]   --->   Operation 36 'ret' 'ret_ln51' <Predicate = (icmp_ln41)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 4.71>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%empty_15 = phi i256 %zext_ln1669, void %for.body.i.split_ifconv, i256 %a_V, void %for.body.i.preheader"   --->   Operation 37 'phi' 'empty_15' <Predicate = (trunc_ln1497)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%i_1 = phi i9 %i_6, void %for.body.i.split_ifconv, i9 0, void %for.body.i.preheader"   --->   Operation 38 'phi' 'i_1' <Predicate = (trunc_ln1497)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%t_V_11 = phi i257 %t_V_5, void %for.body.i.split_ifconv, i257 %zext_ln186, void %for.body.i.preheader"   --->   Operation 39 'phi' 't_V_11' <Predicate = (trunc_ln1497)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%m_V_19 = phi i257 %m_V_14, void %for.body.i.split_ifconv, i257 0, void %for.body.i.preheader"   --->   Operation 40 'phi' 'm_V_19' <Predicate = (trunc_ln1497)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (1.66ns)   --->   "%icmp_ln13 = icmp_eq  i9 %i_1, i9 256" [rsa.cpp:13]   --->   Operation 41 'icmp' 'icmp_ln13' <Predicate = (trunc_ln1497)> <Delay = 1.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%empty_16 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 256, i64 256, i64 256"   --->   Operation 42 'speclooptripcount' 'empty_16' <Predicate = (trunc_ln1497)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (1.82ns)   --->   "%i_6 = add i9 %i_1, i9 1" [rsa.cpp:13]   --->   Operation 43 'add' 'i_6' <Predicate = (trunc_ln1497)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %icmp_ln13, void %for.body.i.split_ifconv, void %_Z11mod_product7ap_uintILi256EES0_S0_.exit" [rsa.cpp:13]   --->   Operation 44 'br' 'br_ln13' <Predicate = (trunc_ln1497)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln1497_1 = trunc i256 %empty_15"   --->   Operation 45 'trunc' 'trunc_ln1497_1' <Predicate = (trunc_ln1497 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln186_1 = zext i257 %t_V_11"   --->   Operation 46 'zext' 'zext_ln186_1' <Predicate = (trunc_ln1497 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln186_2 = zext i257 %m_V_19"   --->   Operation 47 'zext' 'zext_ln186_2' <Predicate = (trunc_ln1497 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 48 [2/2] (3.44ns)   --->   "%ret_V = add i258 %zext_ln186_2, i258 %zext_ln186_1"   --->   Operation 48 'add' 'ret_V' <Predicate = (trunc_ln1497 & !icmp_ln13)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [2/2] (3.44ns)   --->   "%m_V = add i257 %m_V_19, i257 %t_V_11"   --->   Operation 49 'add' 'm_V' <Predicate = (trunc_ln1497 & !icmp_ln13)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%ret_V_1 = bitconcatenate i258 @_ssdm_op_BitConcatenate.i258.i257.i1, i257 %t_V_11, i1 0"   --->   Operation 50 'bitconcatenate' 'ret_V_1' <Predicate = (trunc_ln1497 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (4.71ns)   --->   "%icmp_ln1035 = icmp_ugt  i258 %ret_V_1, i258 %conv_i167_i15"   --->   Operation 51 'icmp' 'icmp_ln1035' <Predicate = (trunc_ln1497 & !icmp_ln13)> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%t_V_4 = shl i257 %t_V_11, i257 1"   --->   Operation 52 'shl' 't_V_4' <Predicate = (trunc_ln1497 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 53 [2/2] (3.44ns)   --->   "%t_V = sub i257 %t_V_4, i257 %zext_ln1496"   --->   Operation 53 'sub' 't_V' <Predicate = (trunc_ln1497 & !icmp_ln13)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%r_V_1 = partselect i255 @_ssdm_op_PartSelect.i255.i256.i32.i32, i256 %empty_15, i32 1, i32 255"   --->   Operation 54 'partselect' 'r_V_1' <Predicate = (trunc_ln1497 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln1669 = zext i255 %r_V_1"   --->   Operation 55 'zext' 'zext_ln1669' <Predicate = (trunc_ln1497 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln186 = trunc i257 %m_V_19"   --->   Operation 56 'trunc' 'trunc_ln186' <Predicate = (trunc_ln1497 & icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (1.58ns)   --->   "%store_ln45 = store i256 %trunc_ln186, i256 %m_V_1" [rsa.cpp:45]   --->   Operation 57 'store' 'store_ln45' <Predicate = (trunc_ln1497 & icmp_ln13)> <Delay = 1.58>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%br_ln45 = br void %for.inc" [rsa.cpp:45]   --->   Operation 58 'br' 'br_ln45' <Predicate = (trunc_ln1497 & icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (1.58ns)   --->   "%br_ln13 = br void %for.body.i24" [rsa.cpp:13]   --->   Operation 59 'br' 'br_ln13' <Predicate = (icmp_ln13) | (!trunc_ln1497)> <Delay = 1.58>

State 4 <SV = 3> <Delay = 6.88>
ST_4 : Operation 60 [1/2] (3.44ns)   --->   "%ret_V = add i258 %zext_ln186_2, i258 %zext_ln186_1"   --->   Operation 60 'add' 'ret_V' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/2] (3.44ns)   --->   "%m_V = add i257 %m_V_19, i257 %t_V_11"   --->   Operation 61 'add' 'm_V' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 62 [2/2] (3.44ns)   --->   "%m_V_11 = sub i257 %m_V, i257 %zext_ln1496"   --->   Operation 62 'sub' 'm_V_11' <Predicate = (trunc_ln1497_1)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/2] (3.44ns)   --->   "%t_V = sub i257 %t_V_4, i257 %zext_ln1496"   --->   Operation 63 'sub' 't_V' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (1.55ns)   --->   "%t_V_5 = select i1 %icmp_ln1035, i257 %t_V, i257 %t_V_4" [rsa.cpp:26]   --->   Operation 64 'select' 't_V_5' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.26>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7"   --->   Operation 65 'specloopname' 'specloopname_ln1633' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (4.71ns)   --->   "%icmp_ln1031 = icmp_ult  i258 %ret_V, i258 %conv_i167_i15"   --->   Operation 66 'icmp' 'icmp_ln1031' <Predicate = (trunc_ln1497_1)> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [1/2] (3.44ns)   --->   "%m_V_11 = sub i257 %m_V, i257 %zext_ln1496"   --->   Operation 67 'sub' 'm_V_11' <Predicate = (trunc_ln1497_1)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node m_V_14)   --->   "%and_ln1031 = and i1 %trunc_ln1497_1, i1 %icmp_ln1031"   --->   Operation 68 'and' 'and_ln1031' <Predicate = (trunc_ln1497_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node m_V_14)   --->   "%m_V_13 = select i1 %and_ln1031, i257 %m_V, i257 %m_V_11"   --->   Operation 69 'select' 'm_V_13' <Predicate = (trunc_ln1497_1)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (1.55ns) (out node of the LUT)   --->   "%m_V_14 = select i1 %trunc_ln1497_1, i257 %m_V_13, i257 %m_V_19"   --->   Operation 70 'select' 'm_V_14' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%br_ln13 = br void %for.body.i" [rsa.cpp:13]   --->   Operation 71 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>

State 6 <SV = 3> <Delay = 4.71>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "%empty_17 = phi i256 %b_V, void %for.inc, i256 %zext_ln1669_2, void %for.body.i24.split_ifconv"   --->   Operation 72 'phi' 'empty_17' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (0.00ns)   --->   "%i_3 = phi i9 0, void %for.inc, i9 %i_8, void %for.body.i24.split_ifconv"   --->   Operation 73 'phi' 'i_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%t_V_12 = phi i257 %zext_ln186, void %for.inc, i257 %t_V_10, void %for.body.i24.split_ifconv"   --->   Operation 74 'phi' 't_V_12' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%m_V_20 = phi i257 0, void %for.inc, i257 %m_V_18, void %for.body.i24.split_ifconv"   --->   Operation 75 'phi' 'm_V_20' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (1.66ns)   --->   "%icmp_ln13_1 = icmp_eq  i9 %i_3, i9 256" [rsa.cpp:13]   --->   Operation 76 'icmp' 'icmp_ln13_1' <Predicate = true> <Delay = 1.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "%empty_18 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 256, i64 256, i64 256"   --->   Operation 77 'speclooptripcount' 'empty_18' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 78 [1/1] (1.82ns)   --->   "%i_8 = add i9 %i_3, i9 1" [rsa.cpp:13]   --->   Operation 78 'add' 'i_8' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %icmp_ln13_1, void %for.body.i24.split_ifconv, void %_Z11mod_product7ap_uintILi256EES0_S0_.exit50" [rsa.cpp:13]   --->   Operation 79 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln1497_2 = trunc i256 %empty_17"   --->   Operation 80 'trunc' 'trunc_ln1497_2' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln186_3 = zext i257 %t_V_12"   --->   Operation 81 'zext' 'zext_ln186_3' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln186_4 = zext i257 %m_V_20"   --->   Operation 82 'zext' 'zext_ln186_4' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_6 : Operation 83 [2/2] (3.44ns)   --->   "%ret_V_2 = add i258 %zext_ln186_4, i258 %zext_ln186_3"   --->   Operation 83 'add' 'ret_V_2' <Predicate = (!icmp_ln13_1)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [2/2] (3.44ns)   --->   "%m_V_15 = add i257 %m_V_20, i257 %t_V_12"   --->   Operation 84 'add' 'm_V_15' <Predicate = (!icmp_ln13_1)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 85 [1/1] (0.00ns)   --->   "%ret_V_3 = bitconcatenate i258 @_ssdm_op_BitConcatenate.i258.i257.i1, i257 %t_V_12, i1 0"   --->   Operation 85 'bitconcatenate' 'ret_V_3' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_6 : Operation 86 [1/1] (4.71ns)   --->   "%icmp_ln1035_1 = icmp_ugt  i258 %ret_V_3, i258 %conv_i167_i15"   --->   Operation 86 'icmp' 'icmp_ln1035_1' <Predicate = (!icmp_ln13_1)> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "%t_V_9 = shl i257 %t_V_12, i257 1"   --->   Operation 87 'shl' 't_V_9' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_6 : Operation 88 [2/2] (3.44ns)   --->   "%t_V_8 = sub i257 %t_V_9, i257 %zext_ln1496"   --->   Operation 88 'sub' 't_V_8' <Predicate = (!icmp_ln13_1)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 89 [1/1] (0.00ns)   --->   "%r_V_2 = partselect i255 @_ssdm_op_PartSelect.i255.i256.i32.i32, i256 %empty_17, i32 1, i32 255"   --->   Operation 89 'partselect' 'r_V_2' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_6 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln1669_2 = zext i255 %r_V_2"   --->   Operation 90 'zext' 'zext_ln1669_2' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_6 : Operation 91 [1/1] (0.00ns)   --->   "%shr_i3_load_1 = load i256 %shr_i3"   --->   Operation 91 'load' 'shr_i3_load_1' <Predicate = (icmp_ln13_1)> <Delay = 0.00>
ST_6 : Operation 92 [1/1] (0.00ns)   --->   "%trunc_ln186_1 = trunc i257 %m_V_20"   --->   Operation 92 'trunc' 'trunc_ln186_1' <Predicate = (icmp_ln13_1)> <Delay = 0.00>
ST_6 : Operation 93 [1/1] (0.00ns)   --->   "%r_V = partselect i255 @_ssdm_op_PartSelect.i255.i256.i32.i32, i256 %shr_i3_load_1, i32 1, i32 255"   --->   Operation 93 'partselect' 'r_V' <Predicate = (icmp_ln13_1)> <Delay = 0.00>
ST_6 : Operation 94 [1/1] (0.00ns)   --->   "%zext_ln1669_1 = zext i255 %r_V"   --->   Operation 94 'zext' 'zext_ln1669_1' <Predicate = (icmp_ln13_1)> <Delay = 0.00>
ST_6 : Operation 95 [1/1] (1.58ns)   --->   "%store_ln41 = store i256 %trunc_ln186_1, i256 %t_V_1" [rsa.cpp:41]   --->   Operation 95 'store' 'store_ln41' <Predicate = (icmp_ln13_1)> <Delay = 1.58>
ST_6 : Operation 96 [1/1] (1.58ns)   --->   "%store_ln41 = store i256 %zext_ln1669_1, i256 %shr_i3" [rsa.cpp:41]   --->   Operation 96 'store' 'store_ln41' <Predicate = (icmp_ln13_1)> <Delay = 1.58>
ST_6 : Operation 97 [1/1] (1.58ns)   --->   "%store_ln41 = store i9 %i_7, i9 %i" [rsa.cpp:41]   --->   Operation 97 'store' 'store_ln41' <Predicate = (icmp_ln13_1)> <Delay = 1.58>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "%br_ln41 = br void %for.body" [rsa.cpp:41]   --->   Operation 98 'br' 'br_ln41' <Predicate = (icmp_ln13_1)> <Delay = 0.00>

State 7 <SV = 4> <Delay = 6.88>
ST_7 : Operation 99 [1/2] (3.44ns)   --->   "%ret_V_2 = add i258 %zext_ln186_4, i258 %zext_ln186_3"   --->   Operation 99 'add' 'ret_V_2' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 100 [1/2] (3.44ns)   --->   "%m_V_15 = add i257 %m_V_20, i257 %t_V_12"   --->   Operation 100 'add' 'm_V_15' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 101 [2/2] (3.44ns)   --->   "%m_V_16 = sub i257 %m_V_15, i257 %zext_ln1496"   --->   Operation 101 'sub' 'm_V_16' <Predicate = (trunc_ln1497_2)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 102 [1/2] (3.44ns)   --->   "%t_V_8 = sub i257 %t_V_9, i257 %zext_ln1496"   --->   Operation 102 'sub' 't_V_8' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 103 [1/1] (1.55ns)   --->   "%t_V_10 = select i1 %icmp_ln1035_1, i257 %t_V_8, i257 %t_V_9" [rsa.cpp:26]   --->   Operation 103 'select' 't_V_10' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 8 <SV = 5> <Delay = 6.26>
ST_8 : Operation 104 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7"   --->   Operation 104 'specloopname' 'specloopname_ln1633' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 105 [1/1] (4.71ns)   --->   "%icmp_ln1031_1 = icmp_ult  i258 %ret_V_2, i258 %conv_i167_i15"   --->   Operation 105 'icmp' 'icmp_ln1031_1' <Predicate = (trunc_ln1497_2)> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 106 [1/2] (3.44ns)   --->   "%m_V_16 = sub i257 %m_V_15, i257 %zext_ln1496"   --->   Operation 106 'sub' 'm_V_16' <Predicate = (trunc_ln1497_2)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node m_V_18)   --->   "%and_ln1031_1 = and i1 %trunc_ln1497_2, i1 %icmp_ln1031_1"   --->   Operation 107 'and' 'and_ln1031_1' <Predicate = (trunc_ln1497_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node m_V_18)   --->   "%m_V_17 = select i1 %and_ln1031_1, i257 %m_V_15, i257 %m_V_16"   --->   Operation 108 'select' 'm_V_17' <Predicate = (trunc_ln1497_2)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 109 [1/1] (1.55ns) (out node of the LUT)   --->   "%m_V_18 = select i1 %trunc_ln1497_2, i257 %m_V_17, i257 %m_V_20"   --->   Operation 109 'select' 'm_V_18' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 110 [1/1] (0.00ns)   --->   "%br_ln13 = br void %for.body.i24" [rsa.cpp:13]   --->   Operation 110 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	'alloca' operation ('t.V') [7]  (0 ns)
	'store' operation ('store_ln41', rsa.cpp:41) of variable 'y_read', rsa.cpp:8 on local variable 't.V' [13]  (1.59 ns)

 <State 2>: 1.82ns
The critical path consists of the following:
	'load' operation ('i', rsa.cpp:41) on local variable 'i' [19]  (0 ns)
	'add' operation ('i', rsa.cpp:41) [24]  (1.82 ns)

 <State 3>: 4.71ns
The critical path consists of the following:
	'phi' operation ('t.V') with incoming values : ('zext_ln186') ('t.V', rsa.cpp:26) [37]  (0 ns)
	'icmp' operation ('icmp_ln1035') [56]  (4.71 ns)

 <State 4>: 6.88ns
The critical path consists of the following:
	'add' operation ('m.V') [50]  (3.44 ns)
	'sub' operation ('m.V') [51]  (3.44 ns)

 <State 5>: 6.27ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln1031') [49]  (4.71 ns)
	'and' operation ('and_ln1031') [52]  (0 ns)
	'select' operation ('m.V') [53]  (0 ns)
	'select' operation ('m.V') [54]  (1.56 ns)

 <State 6>: 4.71ns
The critical path consists of the following:
	'phi' operation ('t.V') with incoming values : ('zext_ln186') ('t.V', rsa.cpp:26) [72]  (0 ns)
	'icmp' operation ('icmp_ln1035_1') [91]  (4.71 ns)

 <State 7>: 6.88ns
The critical path consists of the following:
	'add' operation ('m.V') [85]  (3.44 ns)
	'sub' operation ('m.V') [86]  (3.44 ns)

 <State 8>: 6.27ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln1031_1') [84]  (4.71 ns)
	'and' operation ('and_ln1031_1') [87]  (0 ns)
	'select' operation ('m.V') [88]  (0 ns)
	'select' operation ('m.V') [89]  (1.56 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
