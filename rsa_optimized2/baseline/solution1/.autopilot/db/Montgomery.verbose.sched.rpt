

================================================================
== Vitis HLS Report for 'Montgomery'
================================================================
* Date:           Tue Dec  3 22:25:43 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        baseline
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.584 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      262|      262|  2.620 us|  2.620 us|  262|  262|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.44>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%b_read = read i256 @_ssdm_op_Read.ap_auto.i256, i256 %b"   --->   Operation 6 'read' 'b_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%N_read = read i256 @_ssdm_op_Read.ap_auto.i256, i256 %N"   --->   Operation 7 'read' 'N_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%m_V_loc = alloca i64 1"   --->   Operation 8 'alloca' 'm_V_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%empty = trunc i256 %b_read"   --->   Operation 9 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%zext_ln1495 = zext i256 %N_read"   --->   Operation 10 'zext' 'zext_ln1495' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%zext_ln22 = zext i256 %b_read" [rsa.cpp:22]   --->   Operation 11 'zext' 'zext_ln22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [2/2] (3.44ns)   --->   "%add_ln186 = add i257 %zext_ln1495, i257 %zext_ln22"   --->   Operation 12 'add' 'add_ln186' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 5.02>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%a_read = read i256 @_ssdm_op_Read.ap_auto.i256, i256 %a"   --->   Operation 13 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/2] (3.44ns)   --->   "%add_ln186 = add i257 %zext_ln1495, i257 %zext_ln22"   --->   Operation 14 'add' 'add_ln186' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [2/2] (1.58ns)   --->   "%call_ln186 = call void @Montgomery_Pipeline_Montgomery, i256 %a_read, i1 %empty, i256 %b_read, i256 %N_read, i257 %add_ln186, i257 %m_V_loc"   --->   Operation 15 'call' 'call_ln186' <Predicate = true> <Delay = 1.58> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 1.66>
ST_3 : Operation 16 [1/2] (1.66ns)   --->   "%call_ln186 = call void @Montgomery_Pipeline_Montgomery, i256 %a_read, i1 %empty, i256 %b_read, i256 %N_read, i257 %add_ln186, i257 %m_V_loc"   --->   Operation 16 'call' 'call_ln186' <Predicate = true> <Delay = 1.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 4.72>
ST_4 : Operation 17 [1/1] (0.00ns)   --->   "%m_V_loc_load = load i257 %m_V_loc"   --->   Operation 17 'load' 'm_V_loc_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 18 [1/1] (4.72ns)   --->   "%icmp_ln1031 = icmp_ult  i257 %m_V_loc_load, i257 %zext_ln1495"   --->   Operation 18 'icmp' 'icmp_ln1031' <Predicate = true> <Delay = 4.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 19 [1/1] (0.00ns)   --->   "%trunc_ln186 = trunc i257 %m_V_loc_load"   --->   Operation 19 'trunc' 'trunc_ln186' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 20 [2/2] (3.44ns)   --->   "%sub_ln47 = sub i256 %trunc_ln186, i256 %N_read" [rsa.cpp:47]   --->   Operation 20 'sub' 'sub_ln47' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 4.99>
ST_5 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node select_ln47)   --->   "%xor_ln1031 = xor i1 %icmp_ln1031, i1 1"   --->   Operation 21 'xor' 'xor_ln1031' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 22 [1/2] (3.44ns)   --->   "%sub_ln47 = sub i256 %trunc_ln186, i256 %N_read" [rsa.cpp:47]   --->   Operation 22 'sub' 'sub_ln47' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 23 [1/1] (1.55ns) (out node of the LUT)   --->   "%select_ln47 = select i1 %xor_ln1031, i256 %sub_ln47, i256 %trunc_ln186" [rsa.cpp:47]   --->   Operation 23 'select' 'select_ln47' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 24 [1/1] (0.00ns)   --->   "%ret_ln52 = ret i256 %select_ln47" [rsa.cpp:52]   --->   Operation 24 'ret' 'ret_ln52' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.44ns
The critical path consists of the following:
	wire read operation ('b_read') on port 'b' [4]  (0 ns)
	'add' operation ('add_ln186') [11]  (3.44 ns)

 <State 2>: 5.03ns
The critical path consists of the following:
	'add' operation ('add_ln186') [11]  (3.44 ns)
	'call' operation ('call_ln186') to 'Montgomery_Pipeline_Montgomery' [12]  (1.59 ns)

 <State 3>: 1.66ns
The critical path consists of the following:
	'call' operation ('call_ln186') to 'Montgomery_Pipeline_Montgomery' [12]  (1.66 ns)

 <State 4>: 4.72ns
The critical path consists of the following:
	'load' operation ('m_V_loc_load') on local variable 'm_V_loc' [13]  (0 ns)
	'icmp' operation ('icmp_ln1031') [14]  (4.72 ns)

 <State 5>: 5ns
The critical path consists of the following:
	'sub' operation ('sub_ln47', rsa.cpp:47) [17]  (3.44 ns)
	'select' operation ('select_ln47', rsa.cpp:47) [18]  (1.55 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
