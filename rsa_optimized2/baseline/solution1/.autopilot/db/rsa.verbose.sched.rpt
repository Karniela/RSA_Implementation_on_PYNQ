

================================================================
== Vitis HLS Report for 'rsa'
================================================================
* Date:           Mon Dec  2 18:36:11 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        baseline
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.882 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   264198|   526598|  2.642 ms|  5.266 ms|  264199|  526599|       no|
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+-------------+-----------+-----------+------+----------+
        |               |  Latency (cycles) |  Iteration  |  Initiation Interval  | Trip |          |
        |   Loop Name   |   min   |   max   |   Latency   |  achieved |   target  | Count| Pipelined|
        +---------------+---------+---------+-------------+-----------+-----------+------+----------+
        |- Mod_Product  |     1028|     1028|            4|          -|          -|   257|        no|
        |- RSA_TOP      |   263168|   525568|  1028 ~ 2053|          -|          -|   256|        no|
        | + Montgomery  |     1024|     1024|            4|          -|          -|   256|        no|
        | + Montgomery  |     1024|     1024|            4|          -|          -|   256|        no|
        +---------------+---------+---------+-------------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 16
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 6 
3 --> 4 
4 --> 5 
5 --> 2 
6 --> 11 7 
7 --> 8 11 
8 --> 9 
9 --> 10 
10 --> 7 
11 --> 12 
12 --> 13 16 
13 --> 14 
14 --> 15 
15 --> 12 
16 --> 6 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.58>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%lhs = alloca i32 1"   --->   Operation 17 'alloca' 'lhs' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%lhs_1 = alloca i32 1"   --->   Operation 18 'alloca' 'lhs_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 19 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%shr_i4_i = alloca i32 1"   --->   Operation 20 'alloca' 'shr_i4_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%spectopmodule_ln63 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_7" [rsa.cpp:63]   --->   Operation 21 'spectopmodule' 'spectopmodule_ln63' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i256 %d"   --->   Operation 22 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i256 %d, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_2, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 23 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i256 %d, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 24 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i256 %N"   --->   Operation 25 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i256 %N, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_4, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 26 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i256 %N, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 27 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i256 %y"   --->   Operation 28 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i256 %y, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_5, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 29 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i256 %y, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 30 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i256 %x"   --->   Operation 31 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i256 %x, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_6, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 32 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i256 %x, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 33 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 34 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (1.00ns)   --->   "%y_read = read i256 @_ssdm_op_Read.s_axilite.i256, i256 %y" [rsa.cpp:63]   --->   Operation 35 'read' 'y_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 36 [1/1] (1.00ns)   --->   "%N_read = read i256 @_ssdm_op_Read.s_axilite.i256, i256 %N" [rsa.cpp:63]   --->   Operation 36 'read' 'N_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 37 [1/1] (1.00ns)   --->   "%d_read = read i256 @_ssdm_op_Read.s_axilite.i256, i256 %d" [rsa.cpp:63]   --->   Operation 37 'read' 'd_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln186 = zext i256 %y_read"   --->   Operation 38 'zext' 'zext_ln186' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%conv_i167_i = zext i256 %N_read" [rsa.cpp:63]   --->   Operation 39 'zext' 'conv_i167_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln1496 = zext i256 %N_read"   --->   Operation 40 'zext' 'zext_ln1496' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (1.58ns)   --->   "%store_ln36 = store i257 115792089237316195423570985008687907853269984665640564039457584007913129639936, i257 %shr_i4_i" [rsa.cpp:36]   --->   Operation 41 'store' 'store_ln36' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 42 [1/1] (1.58ns)   --->   "%store_ln36 = store i9 0, i9 %i" [rsa.cpp:36]   --->   Operation 42 'store' 'store_ln36' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 43 [1/1] (1.58ns)   --->   "%store_ln36 = store i257 %zext_ln186, i257 %lhs_1" [rsa.cpp:36]   --->   Operation 43 'store' 'store_ln36' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 44 [1/1] (1.58ns)   --->   "%store_ln36 = store i257 0, i257 %lhs" [rsa.cpp:36]   --->   Operation 44 'store' 'store_ln36' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%br_ln36 = br void %for.body.i" [rsa.cpp:36]   --->   Operation 45 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 4.71>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%i_2 = load i9 %i" [rsa.cpp:36]   --->   Operation 46 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (1.66ns)   --->   "%icmp_ln36 = icmp_eq  i9 %i_2, i9 257" [rsa.cpp:36]   --->   Operation 47 'icmp' 'icmp_ln36' <Predicate = true> <Delay = 1.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 257, i64 257, i64 257"   --->   Operation 48 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (1.82ns)   --->   "%i_8 = add i9 %i_2, i9 1" [rsa.cpp:36]   --->   Operation 49 'add' 'i_8' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%br_ln36 = br i1 %icmp_ln36, void %for.body.i.split_ifconv, void %_Z11mod_product7ap_uintILi257EES_ILi256EES1_.exit" [rsa.cpp:36]   --->   Operation 50 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%lhs_load_1 = load i257 %lhs"   --->   Operation 51 'load' 'lhs_load_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%lhs_1_load = load i257 %lhs_1"   --->   Operation 52 'load' 'lhs_1_load' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln186_1 = zext i257 %lhs_1_load"   --->   Operation 53 'zext' 'zext_ln186_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln186_2 = zext i257 %lhs_load_1"   --->   Operation 54 'zext' 'zext_ln186_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 55 [2/2] (3.44ns)   --->   "%ret_V = add i258 %zext_ln186_2, i258 %zext_ln186_1"   --->   Operation 55 'add' 'ret_V' <Predicate = (!icmp_ln36)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [2/2] (3.44ns)   --->   "%m_V = add i257 %lhs_load_1, i257 %lhs_1_load"   --->   Operation 56 'add' 'm_V' <Predicate = (!icmp_ln36)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%ret_V_1 = bitconcatenate i258 @_ssdm_op_BitConcatenate.i258.i257.i1, i257 %lhs_1_load, i1 0"   --->   Operation 57 'bitconcatenate' 'ret_V_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (4.71ns)   --->   "%icmp_ln1035 = icmp_ugt  i258 %ret_V_1, i258 %conv_i167_i"   --->   Operation 58 'icmp' 'icmp_ln1035' <Predicate = (!icmp_ln36)> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%t_V_2 = shl i257 %lhs_1_load, i257 1"   --->   Operation 59 'shl' 't_V_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 60 [2/2] (3.44ns)   --->   "%t_V_1 = sub i257 %t_V_2, i257 %zext_ln1496"   --->   Operation 60 'sub' 't_V_1' <Predicate = (!icmp_ln36)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (1.58ns)   --->   "%store_ln36 = store i9 %i_8, i9 %i" [rsa.cpp:36]   --->   Operation 61 'store' 'store_ln36' <Predicate = (!icmp_ln36)> <Delay = 1.58>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%d_V = alloca i32 1"   --->   Operation 62 'alloca' 'd_V' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%i_1 = alloca i32 1"   --->   Operation 63 'alloca' 'i_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%m_V_1 = alloca i32 1"   --->   Operation 64 'alloca' 'm_V_1' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%a_V = alloca i32 1"   --->   Operation 65 'alloca' 'a_V' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%lhs_load = load i257 %lhs"   --->   Operation 66 'load' 'lhs_load' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%t_V = trunc i257 %lhs_load"   --->   Operation 67 'trunc' 't_V' <Predicate = (icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (1.58ns)   --->   "%store_ln76 = store i256 %t_V, i256 %a_V" [rsa.cpp:76]   --->   Operation 68 'store' 'store_ln76' <Predicate = (icmp_ln36)> <Delay = 1.58>
ST_2 : Operation 69 [1/1] (1.58ns)   --->   "%store_ln76 = store i256 1, i256 %m_V_1" [rsa.cpp:76]   --->   Operation 69 'store' 'store_ln76' <Predicate = (icmp_ln36)> <Delay = 1.58>
ST_2 : Operation 70 [1/1] (1.58ns)   --->   "%store_ln76 = store i9 0, i9 %i_1" [rsa.cpp:76]   --->   Operation 70 'store' 'store_ln76' <Predicate = (icmp_ln36)> <Delay = 1.58>
ST_2 : Operation 71 [1/1] (1.58ns)   --->   "%store_ln76 = store i256 %d_read, i256 %d_V" [rsa.cpp:76]   --->   Operation 71 'store' 'store_ln76' <Predicate = (icmp_ln36)> <Delay = 1.58>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%br_ln76 = br void %for.body" [rsa.cpp:76]   --->   Operation 72 'br' 'br_ln76' <Predicate = (icmp_ln36)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.88>
ST_3 : Operation 73 [1/2] (3.44ns)   --->   "%ret_V = add i258 %zext_ln186_2, i258 %zext_ln186_1"   --->   Operation 73 'add' 'ret_V' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 74 [1/2] (3.44ns)   --->   "%m_V = add i257 %lhs_load_1, i257 %lhs_1_load"   --->   Operation 74 'add' 'm_V' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [2/2] (3.44ns)   --->   "%m_V_2 = sub i257 %m_V, i257 %zext_ln1496"   --->   Operation 75 'sub' 'm_V_2' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/2] (3.44ns)   --->   "%t_V_1 = sub i257 %t_V_2, i257 %zext_ln1496"   --->   Operation 76 'sub' 't_V_1' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (1.55ns)   --->   "%t_V_3 = select i1 %icmp_ln1035, i257 %t_V_1, i257 %t_V_2" [rsa.cpp:49]   --->   Operation 77 'select' 't_V_3' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (1.58ns)   --->   "%store_ln36 = store i257 %t_V_3, i257 %lhs_1" [rsa.cpp:36]   --->   Operation 78 'store' 'store_ln36' <Predicate = true> <Delay = 1.58>

State 4 <SV = 3> <Delay = 6.26>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%shr_i4_i_load = load i257 %shr_i4_i"   --->   Operation 79 'load' 'shr_i4_i_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln1497 = trunc i257 %shr_i4_i_load"   --->   Operation 80 'trunc' 'trunc_ln1497' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (4.71ns)   --->   "%icmp_ln1031 = icmp_ult  i258 %ret_V, i258 %conv_i167_i"   --->   Operation 81 'icmp' 'icmp_ln1031' <Predicate = true> <Delay = 4.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 82 [1/2] (3.44ns)   --->   "%m_V_2 = sub i257 %m_V, i257 %zext_ln1496"   --->   Operation 82 'sub' 'm_V_2' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node m_V_4)   --->   "%and_ln1031 = and i1 %icmp_ln1031, i1 %trunc_ln1497"   --->   Operation 83 'and' 'and_ln1031' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node m_V_4)   --->   "%m_V_3 = select i1 %and_ln1031, i257 %m_V, i257 %m_V_2"   --->   Operation 84 'select' 'm_V_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 85 [1/1] (1.55ns) (out node of the LUT)   --->   "%m_V_4 = select i1 %trunc_ln1497, i257 %m_V_3, i257 %lhs_load_1" [rsa.cpp:39]   --->   Operation 85 'select' 'm_V_4' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%r_V = partselect i256 @_ssdm_op_PartSelect.i256.i257.i32.i32, i257 %shr_i4_i_load, i32 1, i32 256"   --->   Operation 86 'partselect' 'r_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln1669 = zext i256 %r_V"   --->   Operation 87 'zext' 'zext_ln1669' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (1.58ns)   --->   "%store_ln36 = store i257 %zext_ln1669, i257 %shr_i4_i" [rsa.cpp:36]   --->   Operation 88 'store' 'store_ln36' <Predicate = true> <Delay = 1.58>

State 5 <SV = 4> <Delay = 1.58>
ST_5 : Operation 89 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10"   --->   Operation 89 'specloopname' 'specloopname_ln1633' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (1.58ns)   --->   "%store_ln36 = store i257 %m_V_4, i257 %lhs" [rsa.cpp:36]   --->   Operation 90 'store' 'store_ln36' <Predicate = true> <Delay = 1.58>
ST_5 : Operation 91 [1/1] (0.00ns)   --->   "%br_ln36 = br void %for.body.i" [rsa.cpp:36]   --->   Operation 91 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>

State 6 <SV = 2> <Delay = 2.66>
ST_6 : Operation 92 [1/1] (0.00ns)   --->   "%i_9 = load i9 %i_1" [rsa.cpp:76]   --->   Operation 92 'load' 'i_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 93 [1/1] (0.00ns)   --->   "%a_V_3 = load i256 %m_V_1" [rsa.cpp:85]   --->   Operation 93 'load' 'a_V_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 94 [1/1] (0.00ns)   --->   "%b_V = load i256 %a_V"   --->   Operation 94 'load' 'b_V' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 95 [1/1] (1.66ns)   --->   "%icmp_ln76 = icmp_eq  i9 %i_9, i9 256" [rsa.cpp:76]   --->   Operation 95 'icmp' 'icmp_ln76' <Predicate = true> <Delay = 1.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 96 [1/1] (0.00ns)   --->   "%empty_20 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 256, i64 256, i64 256"   --->   Operation 96 'speclooptripcount' 'empty_20' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 97 [1/1] (1.82ns)   --->   "%i_11 = add i9 %i_9, i9 1" [rsa.cpp:76]   --->   Operation 97 'add' 'i_11' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "%br_ln76 = br i1 %icmp_ln76, void %for.body.split, void %for.cond.cleanup" [rsa.cpp:76]   --->   Operation 98 'br' 'br_ln76' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 99 [1/1] (0.00ns)   --->   "%d_V_load = load i256 %d_V"   --->   Operation 99 'load' 'd_V_load' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_6 : Operation 100 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9"   --->   Operation 100 'specloopname' 'specloopname_ln1633' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_6 : Operation 101 [1/1] (0.00ns)   --->   "%trunc_ln1497_1 = trunc i256 %d_V_load"   --->   Operation 101 'trunc' 'trunc_ln1497_1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_6 : Operation 102 [1/1] (0.00ns)   --->   "%br_ln77 = br i1 %trunc_ln1497_1, void %for.inc, void %for.body.i20.preheader" [rsa.cpp:77]   --->   Operation 102 'br' 'br_ln77' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_6 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln1495 = zext i256 %b_V"   --->   Operation 103 'zext' 'zext_ln1495' <Predicate = (!icmp_ln76 & trunc_ln1497_1)> <Delay = 0.00>
ST_6 : Operation 104 [1/1] (1.58ns)   --->   "%br_ln13 = br void %for.body.i20" [rsa.cpp:13]   --->   Operation 104 'br' 'br_ln13' <Predicate = (!icmp_ln76 & trunc_ln1497_1)> <Delay = 1.58>
ST_6 : Operation 105 [1/1] (1.00ns)   --->   "%write_ln85 = write void @_ssdm_op_Write.s_axilite.i256P0A, i256 %x, i256 %a_V_3" [rsa.cpp:85]   --->   Operation 105 'write' 'write_ln85' <Predicate = (icmp_ln76)> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_6 : Operation 106 [1/1] (0.00ns)   --->   "%ret_ln87 = ret" [rsa.cpp:87]   --->   Operation 106 'ret' 'ret_ln87' <Predicate = (icmp_ln76)> <Delay = 0.00>

State 7 <SV = 3> <Delay = 4.72>
ST_7 : Operation 107 [1/1] (0.00ns)   --->   "%empty_21 = phi i256 %zext_ln1669_1, void %for.body.i20.split, i256 %a_V_3, void %for.body.i20.preheader"   --->   Operation 107 'phi' 'empty_21' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 108 [1/1] (0.00ns)   --->   "%i_3 = phi i9 %i_10, void %for.body.i20.split, i9 0, void %for.body.i20.preheader"   --->   Operation 108 'phi' 'i_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 109 [1/1] (0.00ns)   --->   "%m_V_6 = phi i257 %select_ln18, void %for.body.i20.split, i257 0, void %for.body.i20.preheader" [rsa.cpp:18]   --->   Operation 109 'phi' 'm_V_6' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 110 [1/1] (1.66ns)   --->   "%icmp_ln13 = icmp_eq  i9 %i_3, i9 256" [rsa.cpp:13]   --->   Operation 110 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 1.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 111 [1/1] (0.00ns)   --->   "%empty_22 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 256, i64 256, i64 256"   --->   Operation 111 'speclooptripcount' 'empty_22' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 112 [1/1] (1.82ns)   --->   "%i_10 = add i9 %i_3, i9 1" [rsa.cpp:13]   --->   Operation 112 'add' 'i_10' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 113 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %icmp_ln13, void %for.body.i20.split, void %_Z10Montgomery7ap_uintILi256EES0_S0_.exit" [rsa.cpp:13]   --->   Operation 113 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 114 [1/1] (0.00ns)   --->   "%trunc_ln1497_2 = trunc i256 %empty_21"   --->   Operation 114 'trunc' 'trunc_ln1497_2' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_7 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i257 %m_V_6" [rsa.cpp:13]   --->   Operation 115 'zext' 'zext_ln13' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_7 : Operation 116 [2/2] (3.44ns)   --->   "%m_V_8 = add i258 %zext_ln13, i258 %zext_ln1495"   --->   Operation 116 'add' 'm_V_8' <Predicate = (!icmp_ln13)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 117 [1/1] (0.00ns)   --->   "%r_V_1 = partselect i255 @_ssdm_op_PartSelect.i255.i256.i32.i32, i256 %empty_21, i32 1, i32 255"   --->   Operation 117 'partselect' 'r_V_1' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_7 : Operation 118 [1/1] (0.00ns)   --->   "%zext_ln1669_1 = zext i255 %r_V_1"   --->   Operation 118 'zext' 'zext_ln1669_1' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_7 : Operation 119 [1/1] (4.72ns)   --->   "%icmp_ln1031_1 = icmp_ult  i257 %m_V_6, i257 %zext_ln1496"   --->   Operation 119 'icmp' 'icmp_ln1031_1' <Predicate = (icmp_ln13)> <Delay = 4.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 120 [1/1] (0.00ns)   --->   "%trunc_ln186 = trunc i257 %m_V_6"   --->   Operation 120 'trunc' 'trunc_ln186' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_7 : Operation 121 [2/2] (3.44ns)   --->   "%sub_ln24 = sub i256 %trunc_ln186, i256 %N_read" [rsa.cpp:24]   --->   Operation 121 'sub' 'sub_ln24' <Predicate = (icmp_ln13)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 4> <Delay = 4.99>
ST_8 : Operation 122 [1/2] (3.44ns)   --->   "%m_V_8 = add i258 %zext_ln13, i258 %zext_ln1495"   --->   Operation 122 'add' 'm_V_8' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 123 [1/1] (1.55ns)   --->   "%m_V_9 = select i1 %trunc_ln1497_2, i258 %m_V_8, i258 %zext_ln13" [rsa.cpp:15]   --->   Operation 123 'select' 'm_V_9' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 124 [1/1] (0.00ns)   --->   "%trunc_ln1497_3 = trunc i258 %m_V_9"   --->   Operation 124 'trunc' 'trunc_ln1497_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 125 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i257 @_ssdm_op_PartSelect.i257.i258.i32.i32, i258 %m_V_9, i32 1, i32 257"   --->   Operation 125 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>

State 9 <SV = 5> <Delay = 3.44>
ST_9 : Operation 126 [2/2] (3.44ns)   --->   "%m_V_10 = add i258 %m_V_9, i258 %conv_i167_i"   --->   Operation 126 'add' 'm_V_10' <Predicate = (trunc_ln1497_3)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 6> <Delay = 4.99>
ST_10 : Operation 127 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8"   --->   Operation 127 'specloopname' 'specloopname_ln1633' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 128 [1/2] (3.44ns)   --->   "%m_V_10 = add i258 %m_V_9, i258 %conv_i167_i"   --->   Operation 128 'add' 'm_V_10' <Predicate = (trunc_ln1497_3)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i257 @_ssdm_op_PartSelect.i257.i258.i32.i32, i258 %m_V_10, i32 1, i32 257"   --->   Operation 129 'partselect' 'tmp_1' <Predicate = (trunc_ln1497_3)> <Delay = 0.00>
ST_10 : Operation 130 [1/1] (1.55ns)   --->   "%select_ln18 = select i1 %trunc_ln1497_3, i257 %tmp_1, i257 %tmp_2" [rsa.cpp:18]   --->   Operation 130 'select' 'select_ln18' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 131 [1/1] (0.00ns)   --->   "%br_ln13 = br void %for.body.i20" [rsa.cpp:13]   --->   Operation 131 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>

State 11 <SV = 4> <Delay = 6.58>
ST_11 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node m_V_7)   --->   "%xor_ln1031 = xor i1 %icmp_ln1031_1, i1 1"   --->   Operation 132 'xor' 'xor_ln1031' <Predicate = (trunc_ln1497_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 133 [1/2] (3.44ns)   --->   "%sub_ln24 = sub i256 %trunc_ln186, i256 %N_read" [rsa.cpp:24]   --->   Operation 133 'sub' 'sub_ln24' <Predicate = (trunc_ln1497_1)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 134 [1/1] (1.55ns) (out node of the LUT)   --->   "%m_V_7 = select i1 %xor_ln1031, i256 %sub_ln24, i256 %trunc_ln186" [rsa.cpp:24]   --->   Operation 134 'select' 'm_V_7' <Predicate = (trunc_ln1497_1)> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 135 [1/1] (1.58ns)   --->   "%store_ln79 = store i256 %m_V_7, i256 %m_V_1" [rsa.cpp:79]   --->   Operation 135 'store' 'store_ln79' <Predicate = (trunc_ln1497_1)> <Delay = 1.58>
ST_11 : Operation 136 [1/1] (0.00ns)   --->   "%br_ln79 = br void %for.inc" [rsa.cpp:79]   --->   Operation 136 'br' 'br_ln79' <Predicate = (trunc_ln1497_1)> <Delay = 0.00>
ST_11 : Operation 137 [1/1] (0.00ns)   --->   "%zext_ln1495_1 = zext i256 %b_V"   --->   Operation 137 'zext' 'zext_ln1495_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 138 [1/1] (1.58ns)   --->   "%br_ln13 = br void %for.body.i50" [rsa.cpp:13]   --->   Operation 138 'br' 'br_ln13' <Predicate = true> <Delay = 1.58>

State 12 <SV = 5> <Delay = 4.72>
ST_12 : Operation 139 [1/1] (0.00ns)   --->   "%empty_23 = phi i256 %b_V, void %for.inc, i256 %zext_ln1669_3, void %for.body.i50.split"   --->   Operation 139 'phi' 'empty_23' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 140 [1/1] (0.00ns)   --->   "%i_6 = phi i9 0, void %for.inc, i9 %i_12, void %for.body.i50.split"   --->   Operation 140 'phi' 'i_6' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 141 [1/1] (0.00ns)   --->   "%m_V_11 = phi i257 0, void %for.inc, i257 %select_ln18_1, void %for.body.i50.split" [rsa.cpp:18]   --->   Operation 141 'phi' 'm_V_11' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 142 [1/1] (1.66ns)   --->   "%icmp_ln13_1 = icmp_eq  i9 %i_6, i9 256" [rsa.cpp:13]   --->   Operation 142 'icmp' 'icmp_ln13_1' <Predicate = true> <Delay = 1.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 143 [1/1] (0.00ns)   --->   "%empty_24 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 256, i64 256, i64 256"   --->   Operation 143 'speclooptripcount' 'empty_24' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 144 [1/1] (1.82ns)   --->   "%i_12 = add i9 %i_6, i9 1" [rsa.cpp:13]   --->   Operation 144 'add' 'i_12' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 145 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %icmp_ln13_1, void %for.body.i50.split, void %_Z10Montgomery7ap_uintILi256EES0_S0_.exit58" [rsa.cpp:13]   --->   Operation 145 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 146 [1/1] (0.00ns)   --->   "%trunc_ln1497_4 = trunc i256 %empty_23"   --->   Operation 146 'trunc' 'trunc_ln1497_4' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_12 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln13_1 = zext i257 %m_V_11" [rsa.cpp:13]   --->   Operation 147 'zext' 'zext_ln13_1' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_12 : Operation 148 [2/2] (3.44ns)   --->   "%m_V_12 = add i258 %zext_ln13_1, i258 %zext_ln1495_1"   --->   Operation 148 'add' 'm_V_12' <Predicate = (!icmp_ln13_1)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 149 [1/1] (0.00ns)   --->   "%r_V_3 = partselect i255 @_ssdm_op_PartSelect.i255.i256.i32.i32, i256 %empty_23, i32 1, i32 255"   --->   Operation 149 'partselect' 'r_V_3' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_12 : Operation 150 [1/1] (0.00ns)   --->   "%zext_ln1669_3 = zext i255 %r_V_3"   --->   Operation 150 'zext' 'zext_ln1669_3' <Predicate = (!icmp_ln13_1)> <Delay = 0.00>
ST_12 : Operation 151 [1/1] (4.72ns)   --->   "%icmp_ln1031_2 = icmp_ult  i257 %m_V_11, i257 %zext_ln1496"   --->   Operation 151 'icmp' 'icmp_ln1031_2' <Predicate = (icmp_ln13_1)> <Delay = 4.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 152 [1/1] (0.00ns)   --->   "%trunc_ln186_1 = trunc i257 %m_V_11"   --->   Operation 152 'trunc' 'trunc_ln186_1' <Predicate = (icmp_ln13_1)> <Delay = 0.00>
ST_12 : Operation 153 [2/2] (3.44ns)   --->   "%sub_ln24_1 = sub i256 %trunc_ln186_1, i256 %N_read" [rsa.cpp:24]   --->   Operation 153 'sub' 'sub_ln24_1' <Predicate = (icmp_ln13_1)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 154 [1/1] (1.58ns)   --->   "%store_ln76 = store i9 %i_11, i9 %i_1" [rsa.cpp:76]   --->   Operation 154 'store' 'store_ln76' <Predicate = (icmp_ln13_1)> <Delay = 1.58>

State 13 <SV = 6> <Delay = 4.99>
ST_13 : Operation 155 [1/2] (3.44ns)   --->   "%m_V_12 = add i258 %zext_ln13_1, i258 %zext_ln1495_1"   --->   Operation 155 'add' 'm_V_12' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 156 [1/1] (1.55ns)   --->   "%m_V_13 = select i1 %trunc_ln1497_4, i258 %m_V_12, i258 %zext_ln13_1" [rsa.cpp:15]   --->   Operation 156 'select' 'm_V_13' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 157 [1/1] (0.00ns)   --->   "%trunc_ln1497_5 = trunc i258 %m_V_13"   --->   Operation 157 'trunc' 'trunc_ln1497_5' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 158 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i257 @_ssdm_op_PartSelect.i257.i258.i32.i32, i258 %m_V_13, i32 1, i32 257"   --->   Operation 158 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>

State 14 <SV = 7> <Delay = 3.44>
ST_14 : Operation 159 [2/2] (3.44ns)   --->   "%m_V_14 = add i258 %m_V_13, i258 %conv_i167_i"   --->   Operation 159 'add' 'm_V_14' <Predicate = (trunc_ln1497_5)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 8> <Delay = 4.99>
ST_15 : Operation 160 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8"   --->   Operation 160 'specloopname' 'specloopname_ln1633' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 161 [1/2] (3.44ns)   --->   "%m_V_14 = add i258 %m_V_13, i258 %conv_i167_i"   --->   Operation 161 'add' 'm_V_14' <Predicate = (trunc_ln1497_5)> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 162 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i257 @_ssdm_op_PartSelect.i257.i258.i32.i32, i258 %m_V_14, i32 1, i32 257"   --->   Operation 162 'partselect' 'tmp_3' <Predicate = (trunc_ln1497_5)> <Delay = 0.00>
ST_15 : Operation 163 [1/1] (1.55ns)   --->   "%select_ln18_1 = select i1 %trunc_ln1497_5, i257 %tmp_3, i257 %tmp_4" [rsa.cpp:18]   --->   Operation 163 'select' 'select_ln18_1' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 164 [1/1] (0.00ns)   --->   "%br_ln13 = br void %for.body.i50" [rsa.cpp:13]   --->   Operation 164 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>

State 16 <SV = 6> <Delay = 6.58>
ST_16 : Operation 165 [1/1] (0.00ns)   --->   "%d_V_load_1 = load i256 %d_V"   --->   Operation 165 'load' 'd_V_load_1' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node select_ln24)   --->   "%xor_ln1031_1 = xor i1 %icmp_ln1031_2, i1 1"   --->   Operation 166 'xor' 'xor_ln1031_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 167 [1/2] (3.44ns)   --->   "%sub_ln24_1 = sub i256 %trunc_ln186_1, i256 %N_read" [rsa.cpp:24]   --->   Operation 167 'sub' 'sub_ln24_1' <Predicate = true> <Delay = 3.44> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 1> <II = 1> <Delay = 3.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 168 [1/1] (1.55ns) (out node of the LUT)   --->   "%select_ln24 = select i1 %xor_ln1031_1, i256 %sub_ln24_1, i256 %trunc_ln186_1" [rsa.cpp:24]   --->   Operation 168 'select' 'select_ln24' <Predicate = true> <Delay = 1.55> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_16 : Operation 169 [1/1] (0.00ns)   --->   "%r_V_4 = partselect i255 @_ssdm_op_PartSelect.i255.i256.i32.i32, i256 %d_V_load_1, i32 1, i32 255"   --->   Operation 169 'partselect' 'r_V_4' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln1669_2 = zext i255 %r_V_4"   --->   Operation 170 'zext' 'zext_ln1669_2' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 171 [1/1] (1.58ns)   --->   "%store_ln76 = store i256 %select_ln24, i256 %a_V" [rsa.cpp:76]   --->   Operation 171 'store' 'store_ln76' <Predicate = true> <Delay = 1.58>
ST_16 : Operation 172 [1/1] (1.58ns)   --->   "%store_ln76 = store i256 %zext_ln1669_2, i256 %d_V" [rsa.cpp:76]   --->   Operation 172 'store' 'store_ln76' <Predicate = true> <Delay = 1.58>
ST_16 : Operation 173 [1/1] (0.00ns)   --->   "%br_ln76 = br void %for.body" [rsa.cpp:76]   --->   Operation 173 'br' 'br_ln76' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 2.59ns
The critical path consists of the following:
	s_axi read operation ('y_read', rsa.cpp:63) on port 'y' (rsa.cpp:63) [23]  (1 ns)
	'store' operation ('store_ln36', rsa.cpp:36) of variable 'zext_ln186' on local variable 'lhs' [31]  (1.59 ns)

 <State 2>: 4.71ns
The critical path consists of the following:
	'load' operation ('lhs_1_load') on local variable 'lhs' [42]  (0 ns)
	'icmp' operation ('icmp_ln1035') [56]  (4.71 ns)

 <State 3>: 6.88ns
The critical path consists of the following:
	'add' operation ('m.V') [50]  (3.44 ns)
	'sub' operation ('m.V') [51]  (3.44 ns)

 <State 4>: 6.27ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln1031') [49]  (4.71 ns)
	'and' operation ('and_ln1031') [52]  (0 ns)
	'select' operation ('m.V') [53]  (0 ns)
	'select' operation ('m.V', rsa.cpp:39) [54]  (1.56 ns)

 <State 5>: 1.59ns
The critical path consists of the following:
	'store' operation ('store_ln36', rsa.cpp:36) of variable 'm.V', rsa.cpp:39 on local variable 'lhs' [65]  (1.59 ns)

 <State 6>: 2.66ns
The critical path consists of the following:
	'load' operation ('i', rsa.cpp:76) on local variable 'i' [80]  (0 ns)
	'add' operation ('i', rsa.cpp:76) [85]  (1.82 ns)
	blocking operation 0.838 ns on control path)

 <State 7>: 4.72ns
The critical path consists of the following:
	'phi' operation ('m.V', rsa.cpp:18) with incoming values : ('select_ln18', rsa.cpp:18) [98]  (0 ns)
	'icmp' operation ('icmp_ln1031_1') [118]  (4.72 ns)

 <State 8>: 5ns
The critical path consists of the following:
	'add' operation ('m.V') [107]  (3.44 ns)
	'select' operation ('m.V', rsa.cpp:15) [108]  (1.56 ns)

 <State 9>: 3.44ns
The critical path consists of the following:
	'add' operation ('m.V') [110]  (3.44 ns)

 <State 10>: 5ns
The critical path consists of the following:
	'add' operation ('m.V') [110]  (3.44 ns)
	'select' operation ('select_ln18', rsa.cpp:18) [113]  (1.56 ns)

 <State 11>: 6.58ns
The critical path consists of the following:
	'sub' operation ('sub_ln24', rsa.cpp:24) [121]  (3.44 ns)
	'select' operation ('m.V', rsa.cpp:24) [122]  (1.55 ns)
	'store' operation ('store_ln79', rsa.cpp:79) of variable 'm.V', rsa.cpp:24 on local variable 'm.V' [123]  (1.59 ns)

 <State 12>: 4.72ns
The critical path consists of the following:
	'phi' operation ('m.V', rsa.cpp:18) with incoming values : ('select_ln18_1', rsa.cpp:18) [131]  (0 ns)
	'icmp' operation ('icmp_ln1031_2') [152]  (4.72 ns)

 <State 13>: 5ns
The critical path consists of the following:
	'add' operation ('m.V') [140]  (3.44 ns)
	'select' operation ('m.V', rsa.cpp:15) [141]  (1.56 ns)

 <State 14>: 3.44ns
The critical path consists of the following:
	'add' operation ('m.V') [143]  (3.44 ns)

 <State 15>: 5ns
The critical path consists of the following:
	'add' operation ('m.V') [143]  (3.44 ns)
	'select' operation ('select_ln18_1', rsa.cpp:18) [146]  (1.56 ns)

 <State 16>: 6.58ns
The critical path consists of the following:
	'sub' operation ('sub_ln24_1', rsa.cpp:24) [155]  (3.44 ns)
	'select' operation ('select_ln24', rsa.cpp:24) [156]  (1.55 ns)
	'store' operation ('store_ln76', rsa.cpp:76) of variable 'select_ln24', rsa.cpp:24 on local variable 'a.V' [159]  (1.59 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
