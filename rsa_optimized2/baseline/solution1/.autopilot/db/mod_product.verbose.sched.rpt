

================================================================
== Vitis HLS Report for 'mod_product'
================================================================
* Date:           Mon Dec  2 17:12:59 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        baseline
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.107 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max   | min | max |   Type  |
    +---------+---------+-----------+----------+-----+-----+---------+
    |        2|       18|  20.000 ns|  0.180 us|    2|   18|       no|
    +---------+---------+-----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- VITIS_LOOP_36_1  |        1|       17|         1|          -|          -|  1 ~ 17|        no|
        +-------------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.63>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%t_V = alloca i32 1"   --->   Operation 3 'alloca' 't_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%i_1 = alloca i32 1"   --->   Operation 4 'alloca' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%conv3_i5 = alloca i32 1"   --->   Operation 5 'alloca' 'conv3_i5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%m_V = alloca i32 1"   --->   Operation 6 'alloca' 'm_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %N_c, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str, i32 4294967295, i32 0"   --->   Operation 7 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%N_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %N"   --->   Operation 8 'read' 'N_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%b_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %b"   --->   Operation 9 'read' 'b_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (3.63ns)   --->   "%write_ln186 = write void @_ssdm_op_Write.ap_fifo.i16P0A, i16 %N_c, i16 %N_read"   --->   Operation 10 'write' 'write_ln186' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 2> <FIFO>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%zext_ln186_1 = zext i16 %b_read"   --->   Operation 11 'zext' 'zext_ln186_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln186_2 = zext i16 %N_read"   --->   Operation 12 'zext' 'zext_ln186_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln186 = zext i16 %N_read"   --->   Operation 13 'zext' 'zext_ln186' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (1.58ns)   --->   "%store_ln36 = store i17 0, i17 %m_V" [rsa.cpp:36]   --->   Operation 14 'store' 'store_ln36' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 15 [1/1] (1.58ns)   --->   "%store_ln36 = store i17 65536, i17 %conv3_i5" [rsa.cpp:36]   --->   Operation 15 'store' 'store_ln36' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 16 [1/1] (1.58ns)   --->   "%store_ln36 = store i5 0, i5 %i_1" [rsa.cpp:36]   --->   Operation 16 'store' 'store_ln36' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln36 = store i17 %zext_ln186_1, i17 %t_V" [rsa.cpp:36]   --->   Operation 17 'store' 'store_ln36' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln36 = br void %for.body" [rsa.cpp:36]   --->   Operation 18 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.10>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%i = load i5 %i_1" [rsa.cpp:36]   --->   Operation 19 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%m_V_5 = load i17 %m_V"   --->   Operation 20 'load' 'm_V_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (1.36ns)   --->   "%icmp_ln36 = icmp_eq  i5 %i, i5 17" [rsa.cpp:36]   --->   Operation 21 'icmp' 'icmp_ln36' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1, i64 17, i64 9"   --->   Operation 22 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (1.78ns)   --->   "%i_2 = add i5 %i, i5 1" [rsa.cpp:36]   --->   Operation 23 'add' 'i_2' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (1.58ns)   --->   "%br_ln36 = br i1 %icmp_ln36, void %for.body.split_ifconv, void %for.end" [rsa.cpp:36]   --->   Operation 24 'br' 'br_ln36' <Predicate = true> <Delay = 1.58>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%t_V_load = load i17 %t_V"   --->   Operation 25 'load' 't_V_load' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%conv3_i5_load = load i17 %conv3_i5" [rsa.cpp:36]   --->   Operation 26 'load' 'conv3_i5_load' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8"   --->   Operation 27 'specloopname' 'specloopname_ln1633' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln1495 = zext i17 %m_V_5"   --->   Operation 28 'zext' 'zext_ln1495' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln1495_1 = zext i17 %t_V_load"   --->   Operation 29 'zext' 'zext_ln1495_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (2.10ns)   --->   "%ret_V = add i18 %zext_ln1495, i18 %zext_ln1495_1"   --->   Operation 30 'add' 'ret_V' <Predicate = (!icmp_ln36)> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (2.43ns)   --->   "%icmp_ln1031 = icmp_ult  i18 %ret_V, i18 %zext_ln186_2"   --->   Operation 31 'icmp' 'icmp_ln1031' <Predicate = (!icmp_ln36)> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (2.10ns)   --->   "%m_V_6 = add i17 %m_V_5, i17 %t_V_load"   --->   Operation 32 'add' 'm_V_6' <Predicate = (!icmp_ln36)> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (2.10ns)   --->   "%m_V_7 = sub i17 %m_V_6, i17 %zext_ln186"   --->   Operation 33 'sub' 'm_V_7' <Predicate = (!icmp_ln36)> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln36 = trunc i17 %conv3_i5_load" [rsa.cpp:36]   --->   Operation 34 'trunc' 'trunc_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node m_V_9)   --->   "%and_ln1031 = and i1 %trunc_ln36, i1 %icmp_ln1031"   --->   Operation 35 'and' 'and_ln1031' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node m_V_9)   --->   "%m_V_8 = select i1 %and_ln1031, i17 %m_V_6, i17 %m_V_7"   --->   Operation 36 'select' 'm_V_8' <Predicate = (!icmp_ln36)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.97ns) (out node of the LUT)   --->   "%m_V_9 = select i1 %trunc_ln36, i17 %m_V_8, i17 %m_V_5" [rsa.cpp:36]   --->   Operation 37 'select' 'm_V_9' <Predicate = (!icmp_ln36)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%ret_V_1 = bitconcatenate i18 @_ssdm_op_BitConcatenate.i18.i17.i1, i17 %t_V_load, i1 0"   --->   Operation 38 'bitconcatenate' 'ret_V_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (2.43ns)   --->   "%icmp_ln1035 = icmp_ugt  i18 %ret_V_1, i18 %zext_ln186_2"   --->   Operation 39 'icmp' 'icmp_ln1035' <Predicate = (!icmp_ln36)> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%t_V_1 = shl i17 %t_V_load, i17 1"   --->   Operation 40 'shl' 't_V_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (2.10ns)   --->   "%t_V_2 = sub i17 %t_V_1, i17 %zext_ln186"   --->   Operation 41 'sub' 't_V_2' <Predicate = (!icmp_ln36)> <Delay = 2.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.78ns)   --->   "%t_V_3 = select i1 %icmp_ln1035, i17 %t_V_2, i17 %t_V_1" [rsa.cpp:49]   --->   Operation 42 'select' 't_V_3' <Predicate = (!icmp_ln36)> <Delay = 0.78> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%r_V = partselect i16 @_ssdm_op_PartSelect.i16.i17.i32.i32, i17 %conv3_i5_load, i32 1, i32 16"   --->   Operation 43 'partselect' 'r_V' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln1669 = zext i16 %r_V"   --->   Operation 44 'zext' 'zext_ln1669' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (2.42ns)   --->   "%icmp_ln1019 = icmp_eq  i16 %r_V, i16 0"   --->   Operation 45 'icmp' 'icmp_ln1019' <Predicate = (!icmp_ln36)> <Delay = 2.42> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (1.58ns)   --->   "%br_ln56 = br i1 %icmp_ln1019, void %for.inc, void %for.end" [rsa.cpp:56]   --->   Operation 46 'br' 'br_ln56' <Predicate = (!icmp_ln36)> <Delay = 1.58>
ST_2 : Operation 47 [1/1] (1.58ns)   --->   "%store_ln36 = store i17 %m_V_9, i17 %m_V" [rsa.cpp:36]   --->   Operation 47 'store' 'store_ln36' <Predicate = (!icmp_ln36 & !icmp_ln1019)> <Delay = 1.58>
ST_2 : Operation 48 [1/1] (1.58ns)   --->   "%store_ln36 = store i17 %zext_ln1669, i17 %conv3_i5" [rsa.cpp:36]   --->   Operation 48 'store' 'store_ln36' <Predicate = (!icmp_ln36 & !icmp_ln1019)> <Delay = 1.58>
ST_2 : Operation 49 [1/1] (1.58ns)   --->   "%store_ln36 = store i5 %i_2, i5 %i_1" [rsa.cpp:36]   --->   Operation 49 'store' 'store_ln36' <Predicate = (!icmp_ln36 & !icmp_ln1019)> <Delay = 1.58>
ST_2 : Operation 50 [1/1] (1.58ns)   --->   "%store_ln36 = store i17 %t_V_3, i17 %t_V" [rsa.cpp:36]   --->   Operation 50 'store' 'store_ln36' <Predicate = (!icmp_ln36 & !icmp_ln1019)> <Delay = 1.58>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln36 = br void %for.body" [rsa.cpp:36]   --->   Operation 51 'br' 'br_ln36' <Predicate = (!icmp_ln36 & !icmp_ln1019)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%phi_ln1495 = phi i17 %m_V_5, void %for.body, i17 %m_V_9, void %for.body.split_ifconv"   --->   Operation 52 'phi' 'phi_ln1495' <Predicate = (icmp_ln1019) | (icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln33 = trunc i17 %phi_ln1495" [rsa.cpp:33]   --->   Operation 53 'trunc' 'trunc_ln33' <Predicate = (icmp_ln1019) | (icmp_ln36)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%ret_ln61 = ret i16 %trunc_ln33" [rsa.cpp:61]   --->   Operation 54 'ret' 'ret_ln61' <Predicate = (icmp_ln1019) | (icmp_ln36)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.63ns
The critical path consists of the following:
	wire read operation ('N_read') on port 'N' [9]  (0 ns)
	fifo write operation ('write_ln186') on port 'N_c' [11]  (3.63 ns)

 <State 2>: 7.11ns
The critical path consists of the following:
	'load' operation ('m.V') on local variable 'm.V' [22]  (0 ns)
	'add' operation ('ret.V') [33]  (2.11 ns)
	'icmp' operation ('icmp_ln1031') [34]  (2.43 ns)
	'and' operation ('and_ln1031') [38]  (0 ns)
	'select' operation ('m.V') [39]  (0 ns)
	'select' operation ('m.V', rsa.cpp:36) [40]  (0.978 ns)
	multiplexor before 'phi' operation ('m.V') with incoming values : ('m.V') ('m.V', rsa.cpp:36) [57]  (1.59 ns)
	'phi' operation ('m.V') with incoming values : ('m.V') ('m.V', rsa.cpp:36) [57]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
