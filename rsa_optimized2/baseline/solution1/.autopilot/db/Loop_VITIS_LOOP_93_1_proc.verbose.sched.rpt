

================================================================
== Vitis HLS Report for 'Loop_VITIS_LOOP_93_1_proc'
================================================================
* Date:           Mon Dec  2 17:12:59 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        baseline
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.506 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       20|      564|  0.200 us|  5.640 us|   20|  564|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- VITIS_LOOP_93_1   |       19|      562|   19 ~ 35|          -|          -|  1 ~ 16|        no|
        | + VITIS_LOOP_10_1  |       16|       16|         1|          -|          -|      16|        no|
        | + VITIS_LOOP_10_1  |       16|       16|         1|          -|          -|      16|        no|
        +--------------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 3 4 
4 --> 4 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.22>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 5 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%d_V = alloca i32 1"   --->   Operation 6 'alloca' 'd_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%m_V = alloca i32 1"   --->   Operation 7 'alloca' 'm_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%a_V = alloca i32 1"   --->   Operation 8 'alloca' 'a_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (3.63ns)   --->   "%p_read_1 = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %p_read" [rsa.cpp:91]   --->   Operation 9 'read' 'p_read_1' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = -1> <Depth = -1> <FIFO>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %N, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (3.63ns)   --->   "%N_V = read i16 @_ssdm_op_Read.ap_fifo.i16P0A, i16 %N"   --->   Operation 11 'read' 'N_V' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 2> <FIFO>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %d, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str, i32 4294967295, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (3.63ns)   --->   "%d_read = read i16 @_ssdm_op_Read.ap_fifo.i16P0A, i16 %d" [rsa.cpp:91]   --->   Operation 13 'read' 'd_read' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 3> <FIFO>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%conv_i_i35 = zext i16 %N_V"   --->   Operation 14 'zext' 'conv_i_i35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln93 = zext i16 %N_V" [rsa.cpp:93]   --->   Operation 15 'zext' 'zext_ln93' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.58ns)   --->   "%store_ln93 = store i16 %p_read_1, i16 %a_V" [rsa.cpp:93]   --->   Operation 16 'store' 'store_ln93' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln93 = store i16 1, i16 %m_V" [rsa.cpp:93]   --->   Operation 17 'store' 'store_ln93' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 18 [1/1] (1.58ns)   --->   "%store_ln93 = store i16 %d_read, i16 %d_V" [rsa.cpp:93]   --->   Operation 18 'store' 'store_ln93' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 19 [1/1] (1.58ns)   --->   "%store_ln93 = store i5 0, i5 %i" [rsa.cpp:93]   --->   Operation 19 'store' 'store_ln93' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln93 = br void %for.cond" [rsa.cpp:93]   --->   Operation 20 'br' 'br_ln93' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.78>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%i_6 = load i5 %i" [rsa.cpp:93]   --->   Operation 21 'load' 'i_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%a_V_3 = load i16 %m_V"   --->   Operation 22 'load' 'a_V_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%b_V = load i16 %a_V"   --->   Operation 23 'load' 'b_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.36ns)   --->   "%icmp_ln93 = icmp_eq  i5 %i_6, i5 16" [rsa.cpp:93]   --->   Operation 24 'icmp' 'icmp_ln93' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1, i64 16, i64 8"   --->   Operation 25 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.78ns)   --->   "%i_9 = add i5 %i_6, i5 1" [rsa.cpp:93]   --->   Operation 26 'add' 'i_9' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln93 = br i1 %icmp_ln93, void %for.body, void %for.end.exitStub" [rsa.cpp:93]   --->   Operation 27 'br' 'br_ln93' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%d_V_load = load i16 %d_V" [rsa.cpp:8]   --->   Operation 28 'load' 'd_V_load' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2"   --->   Operation 29 'specloopname' 'specloopname_ln1633' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%trunc_ln8 = trunc i16 %d_V_load" [rsa.cpp:8]   --->   Operation 30 'trunc' 'trunc_ln8' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln94 = br i1 %trunc_ln8, void %if.end, void %for.body.i.preheader" [rsa.cpp:94]   --->   Operation 31 'br' 'br_ln94' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln1495 = zext i16 %b_V"   --->   Operation 32 'zext' 'zext_ln1495' <Predicate = (!icmp_ln93 & trunc_ln8)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (1.58ns)   --->   "%br_ln10 = br void %for.body.i" [rsa.cpp:10]   --->   Operation 33 'br' 'br_ln10' <Predicate = (!icmp_ln93 & trunc_ln8)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 6.50>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%empty_30 = phi i16 %zext_ln1669, void %for.body.i.split, i16 %a_V_3, void %for.body.i.preheader"   --->   Operation 34 'phi' 'empty_30' <Predicate = (trunc_ln8)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%i_1 = phi i5 %i_7, void %for.body.i.split, i5 0, void %for.body.i.preheader"   --->   Operation 35 'phi' 'i_1' <Predicate = (trunc_ln8)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%m_V_2 = phi i31 %select_ln16, void %for.body.i.split, i31 0, void %for.body.i.preheader" [rsa.cpp:16]   --->   Operation 36 'phi' 'm_V_2' <Predicate = (trunc_ln8)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (1.36ns)   --->   "%icmp_ln10 = icmp_eq  i5 %i_1, i5 16" [rsa.cpp:10]   --->   Operation 37 'icmp' 'icmp_ln10' <Predicate = (trunc_ln8)> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%empty_31 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 38 'speclooptripcount' 'empty_31' <Predicate = (trunc_ln8)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (1.78ns)   --->   "%i_7 = add i5 %i_1, i5 1" [rsa.cpp:10]   --->   Operation 39 'add' 'i_7' <Predicate = (trunc_ln8)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln10 = br i1 %icmp_ln10, void %for.body.i.split, void %_Z10Montgomery7ap_uintILi16EES0_S0_.exit" [rsa.cpp:10]   --->   Operation 40 'br' 'br_ln10' <Predicate = (trunc_ln8)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10"   --->   Operation 41 'specloopname' 'specloopname_ln1633' <Predicate = (trunc_ln8 & !icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln10 = zext i31 %m_V_2" [rsa.cpp:10]   --->   Operation 42 'zext' 'zext_ln10' <Predicate = (trunc_ln8 & !icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (2.52ns)   --->   "%m_V_16 = add i32 %zext_ln10, i32 %zext_ln1495"   --->   Operation 43 'add' 'm_V_16' <Predicate = (trunc_ln8 & !icmp_ln10)> <Delay = 2.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%trunc_ln10 = trunc i16 %empty_30" [rsa.cpp:10]   --->   Operation 44 'trunc' 'trunc_ln10' <Predicate = (trunc_ln8 & !icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.69ns)   --->   "%m_V_17 = select i1 %trunc_ln10, i32 %m_V_16, i32 %zext_ln10" [rsa.cpp:12]   --->   Operation 45 'select' 'm_V_17' <Predicate = (trunc_ln8 & !icmp_ln10)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln9 = trunc i32 %m_V_17" [rsa.cpp:9]   --->   Operation 46 'trunc' 'trunc_ln9' <Predicate = (trunc_ln8 & !icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (2.55ns)   --->   "%m_V_18 = add i32 %m_V_17, i32 %conv_i_i35"   --->   Operation 47 'add' 'm_V_18' <Predicate = (trunc_ln8 & !icmp_ln10)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%tmp = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %m_V_18, i32 1, i32 31"   --->   Operation 48 'partselect' 'tmp' <Predicate = (trunc_ln8 & !icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %m_V_17, i32 1, i32 31"   --->   Operation 49 'partselect' 'tmp_1' <Predicate = (trunc_ln8 & !icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.73ns)   --->   "%select_ln16 = select i1 %trunc_ln9, i31 %tmp, i31 %tmp_1" [rsa.cpp:16]   --->   Operation 50 'select' 'select_ln16' <Predicate = (trunc_ln8 & !icmp_ln10)> <Delay = 0.73> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%r_V_1 = partselect i15 @_ssdm_op_PartSelect.i15.i16.i32.i32, i16 %empty_30, i32 1, i32 15"   --->   Operation 51 'partselect' 'r_V_1' <Predicate = (trunc_ln8 & !icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln1669 = zext i15 %r_V_1"   --->   Operation 52 'zext' 'zext_ln1669' <Predicate = (trunc_ln8 & !icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln10 = br void %for.body.i" [rsa.cpp:10]   --->   Operation 53 'br' 'br_ln10' <Predicate = (trunc_ln8 & !icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (2.47ns)   --->   "%icmp_ln1031 = icmp_ult  i31 %m_V_2, i31 %zext_ln93"   --->   Operation 54 'icmp' 'icmp_ln1031' <Predicate = (trunc_ln8 & icmp_ln10)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node m_V_15)   --->   "%xor_ln1031 = xor i1 %icmp_ln1031, i1 1"   --->   Operation 55 'xor' 'xor_ln1031' <Predicate = (trunc_ln8 & icmp_ln10)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln186 = trunc i31 %m_V_2"   --->   Operation 56 'trunc' 'trunc_ln186' <Predicate = (trunc_ln8 & icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (2.07ns)   --->   "%sub_ln24 = sub i16 %trunc_ln186, i16 %N_V" [rsa.cpp:24]   --->   Operation 57 'sub' 'sub_ln24' <Predicate = (trunc_ln8 & icmp_ln10)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.97ns) (out node of the LUT)   --->   "%m_V_15 = select i1 %xor_ln1031, i16 %sub_ln24, i16 %trunc_ln186" [rsa.cpp:24]   --->   Operation 58 'select' 'm_V_15' <Predicate = (trunc_ln8 & icmp_ln10)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (1.58ns)   --->   "%store_ln98 = store i16 %m_V_15, i16 %m_V" [rsa.cpp:98]   --->   Operation 59 'store' 'store_ln98' <Predicate = (trunc_ln8 & icmp_ln10)> <Delay = 1.58>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%br_ln98 = br void %if.end" [rsa.cpp:98]   --->   Operation 60 'br' 'br_ln98' <Predicate = (trunc_ln8 & icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln1495_1 = zext i16 %b_V"   --->   Operation 61 'zext' 'zext_ln1495_1' <Predicate = (icmp_ln10) | (!trunc_ln8)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (1.58ns)   --->   "%br_ln10 = br void %for.body.i34" [rsa.cpp:10]   --->   Operation 62 'br' 'br_ln10' <Predicate = (icmp_ln10) | (!trunc_ln8)> <Delay = 1.58>

State 4 <SV = 3> <Delay = 6.50>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%empty_28 = phi i16 %b_V, void %if.end, i16 %zext_ln1669_2, void %for.body.i34.split"   --->   Operation 63 'phi' 'empty_28' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%i_3 = phi i5 0, void %if.end, i5 %i_8, void %for.body.i34.split"   --->   Operation 64 'phi' 'i_3' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%m_V_9 = phi i31 0, void %if.end, i31 %select_ln16_1, void %for.body.i34.split" [rsa.cpp:16]   --->   Operation 65 'phi' 'm_V_9' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (1.36ns)   --->   "%icmp_ln10_1 = icmp_eq  i5 %i_3, i5 16" [rsa.cpp:10]   --->   Operation 66 'icmp' 'icmp_ln10_1' <Predicate = (!icmp_ln93)> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%empty_29 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 67 'speclooptripcount' 'empty_29' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (1.78ns)   --->   "%i_8 = add i5 %i_3, i5 1" [rsa.cpp:10]   --->   Operation 68 'add' 'i_8' <Predicate = (!icmp_ln93)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%br_ln10 = br i1 %icmp_ln10_1, void %for.body.i34.split, void %_Z10Montgomery7ap_uintILi16EES0_S0_.exit42" [rsa.cpp:10]   --->   Operation 69 'br' 'br_ln10' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10"   --->   Operation 70 'specloopname' 'specloopname_ln1633' <Predicate = (!icmp_ln93 & !icmp_ln10_1)> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln10_1 = zext i31 %m_V_9" [rsa.cpp:10]   --->   Operation 71 'zext' 'zext_ln10_1' <Predicate = (!icmp_ln93 & !icmp_ln10_1)> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (2.52ns)   --->   "%m_V_19 = add i32 %zext_ln10_1, i32 %zext_ln1495_1"   --->   Operation 72 'add' 'm_V_19' <Predicate = (!icmp_ln93 & !icmp_ln10_1)> <Delay = 2.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%trunc_ln10_1 = trunc i16 %empty_28" [rsa.cpp:10]   --->   Operation 73 'trunc' 'trunc_ln10_1' <Predicate = (!icmp_ln93 & !icmp_ln10_1)> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.69ns)   --->   "%m_V_20 = select i1 %trunc_ln10_1, i32 %m_V_19, i32 %zext_ln10_1" [rsa.cpp:12]   --->   Operation 74 'select' 'm_V_20' <Predicate = (!icmp_ln93 & !icmp_ln10_1)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%trunc_ln9_1 = trunc i32 %m_V_20" [rsa.cpp:9]   --->   Operation 75 'trunc' 'trunc_ln9_1' <Predicate = (!icmp_ln93 & !icmp_ln10_1)> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (2.55ns)   --->   "%m_V_21 = add i32 %m_V_20, i32 %conv_i_i35"   --->   Operation 76 'add' 'm_V_21' <Predicate = (!icmp_ln93 & !icmp_ln10_1)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %m_V_21, i32 1, i32 31"   --->   Operation 77 'partselect' 'tmp_2' <Predicate = (!icmp_ln93 & !icmp_ln10_1)> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %m_V_20, i32 1, i32 31"   --->   Operation 78 'partselect' 'tmp_3' <Predicate = (!icmp_ln93 & !icmp_ln10_1)> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.73ns)   --->   "%select_ln16_1 = select i1 %trunc_ln9_1, i31 %tmp_2, i31 %tmp_3" [rsa.cpp:16]   --->   Operation 79 'select' 'select_ln16_1' <Predicate = (!icmp_ln93 & !icmp_ln10_1)> <Delay = 0.73> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%r_V = partselect i15 @_ssdm_op_PartSelect.i15.i16.i32.i32, i16 %empty_28, i32 1, i32 15"   --->   Operation 80 'partselect' 'r_V' <Predicate = (!icmp_ln93 & !icmp_ln10_1)> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln1669_2 = zext i15 %r_V"   --->   Operation 81 'zext' 'zext_ln1669_2' <Predicate = (!icmp_ln93 & !icmp_ln10_1)> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%br_ln10 = br void %for.body.i34" [rsa.cpp:10]   --->   Operation 82 'br' 'br_ln10' <Predicate = (!icmp_ln93 & !icmp_ln10_1)> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%d_V_load_1 = load i16 %d_V"   --->   Operation 83 'load' 'd_V_load_1' <Predicate = (!icmp_ln93 & icmp_ln10_1)> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (2.47ns)   --->   "%icmp_ln1031_1 = icmp_ult  i31 %m_V_9, i31 %zext_ln93"   --->   Operation 84 'icmp' 'icmp_ln1031_1' <Predicate = (!icmp_ln93 & icmp_ln10_1)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node t_V)   --->   "%xor_ln1031_1 = xor i1 %icmp_ln1031_1, i1 1"   --->   Operation 85 'xor' 'xor_ln1031_1' <Predicate = (!icmp_ln93 & icmp_ln10_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%trunc_ln186_1 = trunc i31 %m_V_9"   --->   Operation 86 'trunc' 'trunc_ln186_1' <Predicate = (!icmp_ln93 & icmp_ln10_1)> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (2.07ns)   --->   "%sub_ln24_1 = sub i16 %trunc_ln186_1, i16 %N_V" [rsa.cpp:24]   --->   Operation 87 'sub' 'sub_ln24_1' <Predicate = (!icmp_ln93 & icmp_ln10_1)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 88 [1/1] (0.97ns) (out node of the LUT)   --->   "%t_V = select i1 %xor_ln1031_1, i16 %sub_ln24_1, i16 %trunc_ln186_1" [rsa.cpp:24]   --->   Operation 88 'select' 't_V' <Predicate = (!icmp_ln93 & icmp_ln10_1)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "%r_V_2 = partselect i15 @_ssdm_op_PartSelect.i15.i16.i32.i32, i16 %d_V_load_1, i32 1, i32 15"   --->   Operation 89 'partselect' 'r_V_2' <Predicate = (!icmp_ln93 & icmp_ln10_1)> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln1669_1 = zext i15 %r_V_2"   --->   Operation 90 'zext' 'zext_ln1669_1' <Predicate = (!icmp_ln93 & icmp_ln10_1)> <Delay = 0.00>
ST_4 : Operation 91 [1/1] (2.31ns)   --->   "%icmp_ln1019 = icmp_eq  i15 %r_V_2, i15 0"   --->   Operation 91 'icmp' 'icmp_ln1019' <Predicate = (!icmp_ln93 & icmp_ln10_1)> <Delay = 2.31> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 92 [1/1] (0.00ns)   --->   "%br_ln103 = br i1 %icmp_ln1019, void %for.inc, void %for.end.exitStub" [rsa.cpp:103]   --->   Operation 92 'br' 'br_ln103' <Predicate = (!icmp_ln93 & icmp_ln10_1)> <Delay = 0.00>
ST_4 : Operation 93 [1/1] (1.58ns)   --->   "%store_ln93 = store i16 %t_V, i16 %a_V" [rsa.cpp:93]   --->   Operation 93 'store' 'store_ln93' <Predicate = (!icmp_ln93 & icmp_ln10_1 & !icmp_ln1019)> <Delay = 1.58>
ST_4 : Operation 94 [1/1] (1.58ns)   --->   "%store_ln93 = store i16 %zext_ln1669_1, i16 %d_V" [rsa.cpp:93]   --->   Operation 94 'store' 'store_ln93' <Predicate = (!icmp_ln93 & icmp_ln10_1 & !icmp_ln1019)> <Delay = 1.58>
ST_4 : Operation 95 [1/1] (1.58ns)   --->   "%store_ln93 = store i5 %i_9, i5 %i" [rsa.cpp:93]   --->   Operation 95 'store' 'store_ln93' <Predicate = (!icmp_ln93 & icmp_ln10_1 & !icmp_ln1019)> <Delay = 1.58>
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "%br_ln93 = br void %for.cond" [rsa.cpp:93]   --->   Operation 96 'br' 'br_ln93' <Predicate = (!icmp_ln93 & icmp_ln10_1 & !icmp_ln1019)> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "%ret_ln0 = ret i16 %a_V_3"   --->   Operation 97 'ret' 'ret_ln0' <Predicate = (icmp_ln10_1 & icmp_ln1019) | (icmp_ln93)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.22ns
The critical path consists of the following:
	wire read operation ('t.V', rsa.cpp:91) on port 'p_read' (rsa.cpp:91) [8]  (3.63 ns)
	'store' operation ('store_ln93', rsa.cpp:93) of variable 't.V', rsa.cpp:91 on local variable 'a.V' [15]  (1.59 ns)

 <State 2>: 1.78ns
The critical path consists of the following:
	'load' operation ('i', rsa.cpp:93) on local variable 'i' [21]  (0 ns)
	'add' operation ('i', rsa.cpp:93) [26]  (1.78 ns)

 <State 3>: 6.51ns
The critical path consists of the following:
	'phi' operation ('m.V', rsa.cpp:16) with incoming values : ('select_ln16', rsa.cpp:16) [39]  (0 ns)
	'add' operation ('m.V') [47]  (2.52 ns)
	'select' operation ('m.V', rsa.cpp:12) [49]  (0.698 ns)
	'add' operation ('m.V') [51]  (2.55 ns)
	'select' operation ('select_ln16', rsa.cpp:16) [54]  (0.733 ns)

 <State 4>: 6.51ns
The critical path consists of the following:
	'phi' operation ('m.V', rsa.cpp:16) with incoming values : ('select_ln16_1', rsa.cpp:16) [72]  (0 ns)
	'add' operation ('m.V') [80]  (2.52 ns)
	'select' operation ('m.V', rsa.cpp:12) [82]  (0.698 ns)
	'add' operation ('m.V') [84]  (2.55 ns)
	'select' operation ('select_ln16_1', rsa.cpp:16) [87]  (0.733 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
