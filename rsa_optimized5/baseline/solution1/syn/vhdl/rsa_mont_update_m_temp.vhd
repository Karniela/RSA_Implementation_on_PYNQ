-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rsa_mont_update_m_temp is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    a : IN STD_LOGIC_VECTOR (0 downto 0);
    b : IN STD_LOGIC_VECTOR (127 downto 0);
    N : IN STD_LOGIC_VECTOR (127 downto 0);
    m : IN STD_LOGIC_VECTOR (129 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (129 downto 0) );
end;


architecture behav of rsa_mont_update_m_temp is 
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal m_read_reg_130 : STD_LOGIC_VECTOR (129 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln186_fu_116_p2 : STD_LOGIC_VECTOR (128 downto 0);
    signal add_ln186_reg_135 : STD_LOGIC_VECTOR (128 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal trunc_ln1497_fu_42_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1497_1_fu_54_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_fu_64_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln18_fu_70_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln901_fu_58_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_2_fu_82_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_fu_76_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_3_fu_88_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_fu_94_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d1_V_fu_46_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal d2_V_fu_100_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln186_fu_108_p1 : STD_LOGIC_VECTOR (128 downto 0);
    signal zext_ln186_1_fu_112_p1 : STD_LOGIC_VECTOR (128 downto 0);
    signal zext_ln186_2_fu_122_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin



    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln186_reg_135 <= add_ln186_fu_116_p2;
                m_read_reg_130 <= m;
            end if;
        end if;
    end process;
    add_ln186_fu_116_p2 <= std_logic_vector(unsigned(zext_ln186_fu_108_p1) + unsigned(zext_ln186_1_fu_112_p1));
    and_ln18_1_fu_76_p2 <= (xor_ln18_fu_70_p2 and trunc_ln1497_fu_42_p1);
    and_ln18_2_fu_82_p2 <= (xor_ln901_fu_58_p2 and a);
    and_ln18_3_fu_88_p2 <= (trunc_ln1497_1_fu_54_p1 and and_ln18_2_fu_82_p2);
    and_ln18_fu_64_p2 <= (trunc_ln1497_1_fu_54_p1 and a);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= std_logic_vector(unsigned(zext_ln186_2_fu_122_p1) + unsigned(m_read_reg_130));
    d1_V_fu_46_p3 <= 
        b when (a(0) = '1') else 
        ap_const_lv128_lc_1;
    d2_V_fu_100_p3 <= 
        N when (or_ln18_fu_94_p2(0) = '1') else 
        ap_const_lv128_lc_1;
    or_ln18_fu_94_p2 <= (and_ln18_3_fu_88_p2 or and_ln18_1_fu_76_p2);
    trunc_ln1497_1_fu_54_p1 <= b(1 - 1 downto 0);
    trunc_ln1497_fu_42_p1 <= m(1 - 1 downto 0);
    xor_ln18_fu_70_p2 <= (ap_const_lv1_1 xor and_ln18_fu_64_p2);
    xor_ln901_fu_58_p2 <= (trunc_ln1497_fu_42_p1 xor ap_const_lv1_1);
    zext_ln186_1_fu_112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d2_V_fu_100_p3),129));
    zext_ln186_2_fu_122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln186_reg_135),130));
    zext_ln186_fu_108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d1_V_fu_46_p3),129));
end behav;
