// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rsa_mod_inverse (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a,
        mod_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 134'd1;
parameter    ap_ST_fsm_state2 = 134'd2;
parameter    ap_ST_fsm_state3 = 134'd4;
parameter    ap_ST_fsm_state4 = 134'd8;
parameter    ap_ST_fsm_state5 = 134'd16;
parameter    ap_ST_fsm_state6 = 134'd32;
parameter    ap_ST_fsm_state7 = 134'd64;
parameter    ap_ST_fsm_state8 = 134'd128;
parameter    ap_ST_fsm_state9 = 134'd256;
parameter    ap_ST_fsm_state10 = 134'd512;
parameter    ap_ST_fsm_state11 = 134'd1024;
parameter    ap_ST_fsm_state12 = 134'd2048;
parameter    ap_ST_fsm_state13 = 134'd4096;
parameter    ap_ST_fsm_state14 = 134'd8192;
parameter    ap_ST_fsm_state15 = 134'd16384;
parameter    ap_ST_fsm_state16 = 134'd32768;
parameter    ap_ST_fsm_state17 = 134'd65536;
parameter    ap_ST_fsm_state18 = 134'd131072;
parameter    ap_ST_fsm_state19 = 134'd262144;
parameter    ap_ST_fsm_state20 = 134'd524288;
parameter    ap_ST_fsm_state21 = 134'd1048576;
parameter    ap_ST_fsm_state22 = 134'd2097152;
parameter    ap_ST_fsm_state23 = 134'd4194304;
parameter    ap_ST_fsm_state24 = 134'd8388608;
parameter    ap_ST_fsm_state25 = 134'd16777216;
parameter    ap_ST_fsm_state26 = 134'd33554432;
parameter    ap_ST_fsm_state27 = 134'd67108864;
parameter    ap_ST_fsm_state28 = 134'd134217728;
parameter    ap_ST_fsm_state29 = 134'd268435456;
parameter    ap_ST_fsm_state30 = 134'd536870912;
parameter    ap_ST_fsm_state31 = 134'd1073741824;
parameter    ap_ST_fsm_state32 = 134'd2147483648;
parameter    ap_ST_fsm_state33 = 134'd4294967296;
parameter    ap_ST_fsm_state34 = 134'd8589934592;
parameter    ap_ST_fsm_state35 = 134'd17179869184;
parameter    ap_ST_fsm_state36 = 134'd34359738368;
parameter    ap_ST_fsm_state37 = 134'd68719476736;
parameter    ap_ST_fsm_state38 = 134'd137438953472;
parameter    ap_ST_fsm_state39 = 134'd274877906944;
parameter    ap_ST_fsm_state40 = 134'd549755813888;
parameter    ap_ST_fsm_state41 = 134'd1099511627776;
parameter    ap_ST_fsm_state42 = 134'd2199023255552;
parameter    ap_ST_fsm_state43 = 134'd4398046511104;
parameter    ap_ST_fsm_state44 = 134'd8796093022208;
parameter    ap_ST_fsm_state45 = 134'd17592186044416;
parameter    ap_ST_fsm_state46 = 134'd35184372088832;
parameter    ap_ST_fsm_state47 = 134'd70368744177664;
parameter    ap_ST_fsm_state48 = 134'd140737488355328;
parameter    ap_ST_fsm_state49 = 134'd281474976710656;
parameter    ap_ST_fsm_state50 = 134'd562949953421312;
parameter    ap_ST_fsm_state51 = 134'd1125899906842624;
parameter    ap_ST_fsm_state52 = 134'd2251799813685248;
parameter    ap_ST_fsm_state53 = 134'd4503599627370496;
parameter    ap_ST_fsm_state54 = 134'd9007199254740992;
parameter    ap_ST_fsm_state55 = 134'd18014398509481984;
parameter    ap_ST_fsm_state56 = 134'd36028797018963968;
parameter    ap_ST_fsm_state57 = 134'd72057594037927936;
parameter    ap_ST_fsm_state58 = 134'd144115188075855872;
parameter    ap_ST_fsm_state59 = 134'd288230376151711744;
parameter    ap_ST_fsm_state60 = 134'd576460752303423488;
parameter    ap_ST_fsm_state61 = 134'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 134'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 134'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 134'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 134'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 134'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 134'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 134'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 134'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 134'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 134'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 134'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 134'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 134'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 134'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 134'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 134'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 134'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 134'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 134'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 134'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 134'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 134'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 134'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 134'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 134'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 134'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 134'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 134'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 134'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 134'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 134'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 134'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 134'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 134'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 134'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 134'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 134'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 134'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 134'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 134'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 134'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 134'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 134'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 134'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 134'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 134'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 134'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 134'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 134'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 134'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 134'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 134'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 134'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 134'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 134'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 134'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 134'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 134'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 134'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 134'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 134'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 134'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 134'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 134'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 134'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 134'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 134'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 134'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 134'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 134'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 134'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 134'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 134'd10889035741470030830827987437816582766592;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] a;
input  [127:0] mod_r;
output  [127:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[127:0] ap_return;

(* fsm_encoding = "none" *) reg   [133:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln150_fu_133_p2;
wire   [127:0] grp_fu_164_p2;
reg   [127:0] ret_V_reg_264;
wire    ap_CS_fsm_state133;
wire   [128:0] x0_V_2_fu_217_p2;
wire    ap_CS_fsm_state134;
wire    grp_multi_stage_mul_x0_fu_105_ap_start;
wire    grp_multi_stage_mul_x0_fu_105_ap_done;
wire    grp_multi_stage_mul_x0_fu_105_ap_idle;
wire    grp_multi_stage_mul_x0_fu_105_ap_ready;
wire   [128:0] grp_multi_stage_mul_x0_fu_105_ap_return;
reg   [128:0] x1_V_reg_80;
reg   [128:0] x0_V_3_reg_92;
reg    grp_multi_stage_mul_x0_fu_105_ap_start_reg;
reg   [7:0] i_fu_56;
wire   [7:0] i_9_fu_139_p2;
wire   [0:0] icmp_ln1039_fu_158_p2;
reg   [127:0] a_buf_0_fu_60;
reg   [127:0] ret_V_8_fu_64;
wire   [127:0] grp_fu_171_p2;
wire   [126:0] tmp_fu_148_p4;
wire   [127:0] trunc_ln840_fu_195_p1;
wire   [0:0] tmp_1_fu_187_p3;
wire   [127:0] add_ln165_fu_199_p2;
reg    grp_fu_164_ap_start;
wire    grp_fu_164_ap_done;
reg    grp_fu_171_ap_start;
wire    grp_fu_171_ap_done;
wire   [127:0] select_ln165_fu_204_p3;
reg   [127:0] ap_return_preg;
reg   [133:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ST_fsm_state116_blk;
wire    ap_ST_fsm_state117_blk;
wire    ap_ST_fsm_state118_blk;
wire    ap_ST_fsm_state119_blk;
wire    ap_ST_fsm_state120_blk;
wire    ap_ST_fsm_state121_blk;
wire    ap_ST_fsm_state122_blk;
wire    ap_ST_fsm_state123_blk;
wire    ap_ST_fsm_state124_blk;
wire    ap_ST_fsm_state125_blk;
wire    ap_ST_fsm_state126_blk;
wire    ap_ST_fsm_state127_blk;
wire    ap_ST_fsm_state128_blk;
wire    ap_ST_fsm_state129_blk;
wire    ap_ST_fsm_state130_blk;
wire    ap_ST_fsm_state131_blk;
wire    ap_ST_fsm_state132_blk;
wire    ap_ST_fsm_state133_blk;
reg    ap_ST_fsm_state134_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 134'd1;
#0 grp_multi_stage_mul_x0_fu_105_ap_start_reg = 1'b0;
#0 ap_return_preg = 128'd0;
end

rsa_multi_stage_mul_x0 grp_multi_stage_mul_x0_fu_105(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_multi_stage_mul_x0_fu_105_ap_start),
    .ap_done(grp_multi_stage_mul_x0_fu_105_ap_done),
    .ap_idle(grp_multi_stage_mul_x0_fu_105_ap_idle),
    .ap_ready(grp_multi_stage_mul_x0_fu_105_ap_ready),
    .a(ret_V_reg_264),
    .b(x0_V_3_reg_92),
    .ap_return(grp_multi_stage_mul_x0_fu_105_ap_return)
);

rsa_udiv_128ns_128ns_128_132_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 132 ),
    .din0_WIDTH( 128 ),
    .din1_WIDTH( 128 ),
    .dout_WIDTH( 128 ))
udiv_128ns_128ns_128_132_seq_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_164_ap_start),
    .done(grp_fu_164_ap_done),
    .din0(a_buf_0_fu_60),
    .din1(ret_V_8_fu_64),
    .ce(1'b1),
    .dout(grp_fu_164_p2)
);

rsa_urem_128ns_128ns_128_132_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 132 ),
    .din0_WIDTH( 128 ),
    .din1_WIDTH( 128 ),
    .dout_WIDTH( 128 ))
urem_128ns_128ns_128_132_seq_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_171_ap_start),
    .done(grp_fu_171_ap_done),
    .din0(a_buf_0_fu_60),
    .din1(ret_V_8_fu_64),
    .ce(1'b1),
    .dout(grp_fu_171_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 128'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & ((icmp_ln1039_fu_158_p2 == 1'd1) | (icmp_ln150_fu_133_p2 == 1'd1)))) begin
            ap_return_preg <= select_ln165_fu_204_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_multi_stage_mul_x0_fu_105_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state133)) begin
            grp_multi_stage_mul_x0_fu_105_ap_start_reg <= 1'b1;
        end else if ((grp_multi_stage_mul_x0_fu_105_ap_ready == 1'b1)) begin
            grp_multi_stage_mul_x0_fu_105_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        a_buf_0_fu_60 <= a;
    end else if (((icmp_ln1039_fu_158_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln150_fu_133_p2 == 1'd0))) begin
        a_buf_0_fu_60 <= ret_V_8_fu_64;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_56 <= 8'd0;
    end else if (((icmp_ln1039_fu_158_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln150_fu_133_p2 == 1'd0))) begin
        i_fu_56 <= i_9_fu_139_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        ret_V_8_fu_64 <= mod_r;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        ret_V_8_fu_64 <= grp_fu_171_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state134) & (grp_multi_stage_mul_x0_fu_105_ap_done == 1'b1))) begin
        x0_V_3_reg_92 <= x0_V_2_fu_217_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        x0_V_3_reg_92 <= 129'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state134) & (grp_multi_stage_mul_x0_fu_105_ap_done == 1'b1))) begin
        x1_V_reg_80 <= x0_V_3_reg_92;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        x1_V_reg_80 <= 129'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        ret_V_reg_264 <= grp_fu_164_p2;
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state116_blk = 1'b0;

assign ap_ST_fsm_state117_blk = 1'b0;

assign ap_ST_fsm_state118_blk = 1'b0;

assign ap_ST_fsm_state119_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state120_blk = 1'b0;

assign ap_ST_fsm_state121_blk = 1'b0;

assign ap_ST_fsm_state122_blk = 1'b0;

assign ap_ST_fsm_state123_blk = 1'b0;

assign ap_ST_fsm_state124_blk = 1'b0;

assign ap_ST_fsm_state125_blk = 1'b0;

assign ap_ST_fsm_state126_blk = 1'b0;

assign ap_ST_fsm_state127_blk = 1'b0;

assign ap_ST_fsm_state128_blk = 1'b0;

assign ap_ST_fsm_state129_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state130_blk = 1'b0;

assign ap_ST_fsm_state131_blk = 1'b0;

assign ap_ST_fsm_state132_blk = 1'b0;

assign ap_ST_fsm_state133_blk = 1'b0;

always @ (*) begin
    if ((grp_multi_stage_mul_x0_fu_105_ap_done == 1'b0)) begin
        ap_ST_fsm_state134_blk = 1'b1;
    end else begin
        ap_ST_fsm_state134_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & ((icmp_ln1039_fu_158_p2 == 1'd1) | (icmp_ln150_fu_133_p2 == 1'd1))) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((icmp_ln1039_fu_158_p2 == 1'd1) | (icmp_ln150_fu_133_p2 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((icmp_ln1039_fu_158_p2 == 1'd1) | (icmp_ln150_fu_133_p2 == 1'd1)))) begin
        ap_return = select_ln165_fu_204_p3;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((icmp_ln1039_fu_158_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln150_fu_133_p2 == 1'd0))) begin
        grp_fu_164_ap_start = 1'b1;
    end else begin
        grp_fu_164_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1039_fu_158_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln150_fu_133_p2 == 1'd0))) begin
        grp_fu_171_ap_start = 1'b1;
    end else begin
        grp_fu_171_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & ((icmp_ln1039_fu_158_p2 == 1'd1) | (icmp_ln150_fu_133_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            if (((1'b1 == ap_CS_fsm_state134) & (grp_multi_stage_mul_x0_fu_105_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state134;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln165_fu_199_p2 = (trunc_ln840_fu_195_p1 + mod_r);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign grp_multi_stage_mul_x0_fu_105_ap_start = grp_multi_stage_mul_x0_fu_105_ap_start_reg;

assign i_9_fu_139_p2 = (i_fu_56 + 8'd1);

assign icmp_ln1039_fu_158_p2 = ((tmp_fu_148_p4 == 127'd0) ? 1'b1 : 1'b0);

assign icmp_ln150_fu_133_p2 = ((i_fu_56 == 8'd128) ? 1'b1 : 1'b0);

assign select_ln165_fu_204_p3 = ((tmp_1_fu_187_p3[0:0] == 1'b1) ? add_ln165_fu_199_p2 : trunc_ln840_fu_195_p1);

assign tmp_1_fu_187_p3 = x1_V_reg_80[32'd128];

assign tmp_fu_148_p4 = {{a_buf_0_fu_60[127:1]}};

assign trunc_ln840_fu_195_p1 = x1_V_reg_80[127:0];

assign x0_V_2_fu_217_p2 = (x1_V_reg_80 - grp_multi_stage_mul_x0_fu_105_ap_return);

endmodule //rsa_mod_inverse
