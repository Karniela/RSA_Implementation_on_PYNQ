

================================================================
== Vitis HLS Report for 'Montgomery_Pipeline_Montgomery'
================================================================
* Date:           Thu Dec 12 16:24:57 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        baseline
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.999 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      131|      131|  1.310 us|  1.310 us|  131|  131|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |              |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Montgomery  |      129|      129|         3|          1|          1|   128|       yes|
        +--------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.50>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i_01 = alloca i32 1"   --->   Operation 6 'alloca' 'i_01' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%a_buf_0 = alloca i32 1"   --->   Operation 7 'alloca' 'a_buf_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%m_V_6 = alloca i32 1"   --->   Operation 8 'alloca' 'm_V_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%N_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %N"   --->   Operation 9 'read' 'N_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%b_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %b"   --->   Operation 10 'read' 'b_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%a_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %a"   --->   Operation 11 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.58ns)   --->   "%store_ln0 = store i130 0, i130 %m_V_6"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 13 [1/1] (1.58ns)   --->   "%store_ln0 = store i128 %a_read, i128 %a_buf_0"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 14 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 0, i8 %i_01"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 15 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%i = load i8 %i_01" [rsa.cpp:34]   --->   Operation 16 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.55ns)   --->   "%icmp_ln34 = icmp_eq  i8 %i, i8 128" [rsa.cpp:34]   --->   Operation 17 'icmp' 'icmp_ln34' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 128, i64 128, i64 128"   --->   Operation 18 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.91ns)   --->   "%i_11 = add i8 %i, i8 1" [rsa.cpp:34]   --->   Operation 19 'add' 'i_11' <Predicate = true> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln34 = br i1 %icmp_ln34, void %for.inc.split, void %for.end.exitStub" [rsa.cpp:34]   --->   Operation 20 'br' 'br_ln34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.58ns)   --->   "%store_ln34 = store i8 %i_11, i8 %i_01" [rsa.cpp:34]   --->   Operation 21 'store' 'store_ln34' <Predicate = (!icmp_ln34)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 6.33>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%a_buf_0_load = load i128 %a_buf_0" [rsa.cpp:34]   --->   Operation 22 'load' 'a_buf_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%m_V_6_load_1 = load i130 %m_V_6" [rsa.cpp:36]   --->   Operation 23 'load' 'm_V_6_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%trunc_ln34 = trunc i128 %a_buf_0_load" [rsa.cpp:34]   --->   Operation 24 'trunc' 'trunc_ln34' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [2/2] (6.33ns)   --->   "%temp_V = call i130 @mont_update_m_temp, i1 %trunc_ln34, i128 %b_read, i128 %N_read, i130 %m_V_6_load_1" [rsa.cpp:36]   --->   Operation 25 'call' 'temp_V' <Predicate = true> <Delay = 6.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%m_V_6_load = load i130 %m_V_6"   --->   Operation 35 'load' 'm_V_6_load' <Predicate = (icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i130P0A, i130 %m_V_7_0_out, i130 %m_V_6_load"   --->   Operation 36 'write' 'write_ln0' <Predicate = (icmp_ln34)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 37 'ret' 'ret_ln0' <Predicate = (icmp_ln34)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.99>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%specpipeline_ln35 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_5" [rsa.cpp:35]   --->   Operation 26 'specpipeline' 'specpipeline_ln35' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%specloopname_ln34 = specloopname void @_ssdm_op_SpecLoopName, void @empty_1" [rsa.cpp:34]   --->   Operation 27 'specloopname' 'specloopname_ln34' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/2] (5.41ns)   --->   "%temp_V = call i130 @mont_update_m_temp, i1 %trunc_ln34, i128 %b_read, i128 %N_read, i130 %m_V_6_load_1" [rsa.cpp:36]   --->   Operation 28 'call' 'temp_V' <Predicate = true> <Delay = 5.41> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%call_ret2 = call i258 @mont_update_m_a, i130 %temp_V, i128 %a_buf_0_load" [rsa.cpp:37]   --->   Operation 29 'call' 'call_ret2' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%m_V = extractvalue i258 %call_ret2" [rsa.cpp:37]   --->   Operation 30 'extractvalue' 'm_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%a_buf_ret = extractvalue i258 %call_ret2" [rsa.cpp:37]   --->   Operation 31 'extractvalue' 'a_buf_ret' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (1.58ns)   --->   "%store_ln34 = store i130 %m_V, i130 %m_V_6" [rsa.cpp:34]   --->   Operation 32 'store' 'store_ln34' <Predicate = true> <Delay = 1.58>
ST_3 : Operation 33 [1/1] (1.58ns)   --->   "%store_ln34 = store i128 %a_buf_ret, i128 %a_buf_0" [rsa.cpp:34]   --->   Operation 33 'store' 'store_ln34' <Predicate = true> <Delay = 1.58>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln34 = br void %for.inc" [rsa.cpp:34]   --->   Operation 34 'br' 'br_ln34' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.5ns
The critical path consists of the following:
	'alloca' operation ('i') [5]  (0 ns)
	'load' operation ('i', rsa.cpp:34) on local variable 'i' [16]  (0 ns)
	'add' operation ('i', rsa.cpp:34) [19]  (1.92 ns)
	'store' operation ('store_ln34', rsa.cpp:34) of variable 'i', rsa.cpp:34 on local variable 'i' [33]  (1.59 ns)

 <State 2>: 6.33ns
The critical path consists of the following:
	'load' operation ('a_buf_0_load', rsa.cpp:34) on local variable 'a_buf_0' [22]  (0 ns)
	'call' operation ('temp.V', rsa.cpp:36) to 'mont_update_m_temp' [27]  (6.33 ns)

 <State 3>: 7ns
The critical path consists of the following:
	'call' operation ('temp.V', rsa.cpp:36) to 'mont_update_m_temp' [27]  (5.41 ns)
	'call' operation ('call_ret2', rsa.cpp:37) to 'mont_update_m_a' [28]  (0 ns)
	'store' operation ('store_ln34', rsa.cpp:34) of variable 'm.V', rsa.cpp:37 on local variable 'm.V' [31]  (1.59 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
